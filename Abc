--_G.KeyUi = "wwwwwww#5383"
CheckStats = loadstring(game:HttpGet("https://raw.githubusercontent.com/Freshy-github/Script-Premium/main/wwwwwwwwwwww"))()
local CheckUiKey = loadstring(game:HttpGet("https://raw.githubusercontent.com/Freshy-github/Script-Premium/main/wwwwwwwzzzzzz"))()
local Stats = "Library Is Working"
local UiKey = "Library wwwwwww#5383"
local CheckKey = "wwwwwww#5383"
--local webhook = "https://discord.com/api/webhooks/1028715485275099206/FSyoY4HbkoqMaYbktK8RCQ-Q4oJ9IZCXCFpWtw0XlDmzma5NAl84Ki_lcYn7p78T2u7e"
local PlayerId = game.Players.LocalPlayer.UserId
local ClientId = game:GetService("RbxAnalyticsService"):GetClientId()
local NewLibrarryHwid = "#%^*@!,>][zx,k+=_1BnZKiB-zz0o9wz"..ClientId.."K34E2-8434E2-8209-4CB5-8D94-CA66DF52F2008Z-CA66DF52F200-4cCG-5BKjz-o5"..ClientId.."8ZBNx-zlk_z-Y6Nk-hNM&19-#;[]_-8209-4Kzn$5-8D94-CA66!!z52F200-_=$5&!,?z[=--1#@./0';]"
local AllowedLibrarryHWID = loadstring(game:HttpGet("https://pastebin.com/raw/eYyU0wei"))() or loadstring(game:HttpGet("https://pastebin.com/raw/45rrhVD0"))()

if CheckStats and Stats == "Library Is Working" then
	if CheckUiKey and UiKey == "Library wwwwwww#5383" then
	if CheckKey and _G.KeyUi == "wwwwwww#5383" then
		if table.find(AllowedLibrarryHWID,NewLibrarryHwid) then
--if string.find(CheckStats,Stats) then
	--if string.find(CheckKey,_G.KeyUi) then
	do  local ui =  game:GetService("CoreGui"):FindFirstChild("UILibrary")  if ui then ui:Destroy() end end

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Red = {RainbowColorValue = 0, HueSelectionPosition = 0}

coroutine.wrap(
	function()
		while wait() do
			Red.RainbowColorValue = Red.RainbowColorValue + 1 / 255
			Red.HueSelectionPosition = Red.HueSelectionPosition + 1

			if Red.RainbowColorValue >= 1 then
				Red.RainbowColorValue = 0
			end

			if Red.HueSelectionPosition == 210 then
				Red.HueSelectionPosition = 0
			end
		end
	end
)()

local UILibrary = Instance.new("ScreenGui")

UILibrary.Name = "UILibrary"
UILibrary.Parent = game:GetService("CoreGui")
UILibrary.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local function MakeDraggable(topbarobject, object)
	local Dragging = nil
	local DragInput = nil
	local DragStart = nil
	local StartPosition = nil

	local function Update(input)
		local Delta = input.Position - DragStart
		local pos =
			UDim2.new(
				StartPosition.X.Scale,
				StartPosition.X.Offset + Delta.X,
				StartPosition.Y.Scale,
				StartPosition.Y.Offset + Delta.Y
			)
		local Tween = TweenService:Create(object, TweenInfo.new(0.2), {Position = pos})
		Tween:Play()
	end

	topbarobject.InputBegan:Connect(
		function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				Dragging = true
				DragStart = input.Position
				StartPosition = object.Position

				input.Changed:Connect(
					function()
						if input.UserInputState == Enum.UserInputState.End then
							Dragging = false
						end
					end
				)
			end
		end
	)

	topbarobject.InputChanged:Connect(
		function(input)
			if
				input.UserInputType == Enum.UserInputType.MouseMovement or
				input.UserInputType == Enum.UserInputType.Touch
			then
				DragInput = input
			end
		end
	)

	UserInputService.InputChanged:Connect(
		function(input)
			if input == DragInput and Dragging then
				Update(input)
			end
		end
	)
end

local ActualTypes = {
	RoundFrame = "ImageLabel",
	Shadow = "ImageLabel",
	Circle = "ImageLabel",
	CircleButton = "ImageButton",
	Frame = "Frame",
	Label = "TextLabel",
	Button = "TextButton",
	SmoothButton = "ImageButton",
	Box = "TextBox",
	ScrollingFrame = "ScrollingFrame",
	Menu = "ImageButton",
	NavBar = "ImageButton"
}

local Properties = {
	RoundFrame = {
		BackgroundTransparency = 1,
		Image = "http://www.roblox.com/asset/?id=5554237731",
		ScaleType = Enum.ScaleType.Slice,
		SliceCenter = Rect.new(3,3,297,297)
	},
	SmoothButton = {
		AutoButtonColor = false,
		BackgroundTransparency = 1,
		Image = "http://www.roblox.com/asset/?id=5554237731",
		ScaleType = Enum.ScaleType.Slice,
		SliceCenter = Rect.new(3,3,297,297)
	},
	Shadow = {
		Name = "Shadow",
		BackgroundTransparency = 1,
		Image = "http://www.roblox.com/asset/?id=5554236805",
		ScaleType = Enum.ScaleType.Slice,
		SliceCenter = Rect.new(23,23,277,277),
		Size = UDim2.fromScale(1,1) + UDim2.fromOffset(30,30),
		Position = UDim2.fromOffset(-15,-15)
	},
	Circle = {
		BackgroundTransparency = 1,
		Image = "http://www.roblox.com/asset/?id=5554831670"
	},
	CircleButton = {
		BackgroundTransparency = 1,
		AutoButtonColor = false,
		Image = "http://www.roblox.com/asset/?id=5554831670"
	},
	Frame = {
		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		Size = UDim2.fromScale(1,1)
	},
	Label = {
		BackgroundTransparency = 1,
		Position = UDim2.fromOffset(5,0),
		Size = UDim2.fromScale(1,1) - UDim2.fromOffset(5,0),
		TextSize = 14,
		TextXAlignment = Enum.TextXAlignment.Left
	},
	Button = {
		BackgroundTransparency = 1,
		Position = UDim2.fromOffset(5,0),
		Size = UDim2.fromScale(1,1) - UDim2.fromOffset(5,0),
		TextSize = 14,
		TextXAlignment = Enum.TextXAlignment.Left
	},
	Box = {
		BackgroundTransparency = 1,
		Position = UDim2.fromOffset(5,0),
		Size = UDim2.fromScale(1,1) - UDim2.fromOffset(5,0),
		TextSize = 14,
		TextXAlignment = Enum.TextXAlignment.Left
	},
	ScrollingFrame = {
		BackgroundTransparency = 1,
		ScrollBarThickness = 0,
		CanvasSize = UDim2.fromScale(0,0),
		Size = UDim2.fromScale(1,1)
	},
	Menu = {
		Name = "More",
		AutoButtonColor = false,
		BackgroundTransparency = 1,
		Image = "http://www.roblox.com/asset/?id=5555108481",
		Size = UDim2.fromOffset(20,20),
		Position = UDim2.fromScale(1,0.5) - UDim2.fromOffset(25,10)
	},
	NavBar = {
		Name = "SheetToggle",
		Image = "http://www.roblox.com/asset/?id=5576439039",
		BackgroundTransparency = 1,
		Size = UDim2.fromOffset(20,20),
		Position = UDim2.fromOffset(5,5),
		AutoButtonColor = false
	}
}

local Types = {
	"RoundFrame",
	"Shadow",
	"Circle",
	"CircleButton",
	"Frame",
	"Label",
	"Button",
	"SmoothButton",
	"Box",
	"ScrollingFrame",
	"Menu",
	"NavBar"
}

function FindType(String)
	for _, Type in next, Types do
		if Type:sub(1, #String):lower() == String:lower() then
			return Type
		end
	end
	return false
end

local Objects = {}

function Objects.new(Type)
	local TargetType = FindType(Type)
	if TargetType then
		local NewImage = Instance.new(ActualTypes[TargetType])
		if Properties[TargetType] then
			for Property, Value in next, Properties[TargetType] do
				NewImage[Property] = Value
			end
		end
		return NewImage
	else
		return Instance.new(Type)
	end
end

local function GetXY(GuiObject)
	local Max, May = GuiObject.AbsoluteSize.X, GuiObject.AbsoluteSize.Y
	local Px, Py = math.clamp(Mouse.X - GuiObject.AbsolutePosition.X, 0, Max), math.clamp(Mouse.Y - GuiObject.AbsolutePosition.Y, 0, May)
	return Px/Max, Py/May
end

local function CircleAnim(GuiObject, EndColour, StartColour)
	local PX, PY = GetXY(GuiObject)
	local Circle = Objects.new("Circle")
	Circle.Size = UDim2.fromScale(0,0)
	Circle.Position = UDim2.fromScale(PX,PY)
	Circle.ImageColor3 = StartColour or GuiObject.ImageColor3
	Circle.ZIndex = 200
	Circle.Parent = GuiObject
	local Size = GuiObject.AbsoluteSize.X
	TweenService:Create(Circle, TweenInfo.new(0.5), {Position = UDim2.fromScale(PX,PY) - UDim2.fromOffset(Size/2,Size/2), ImageTransparency = 1, ImageColor3 = EndColour, Size = UDim2.fromOffset(Size,Size)}):Play()
	spawn(function()
		wait(0.5)
		Circle:Destroy()
	end)
end

local function tablefound(ta, object)
	for i,v in pairs(ta) do
		if v == object then
			return true
		end
	end
	return false
end

local Library = {}

function Library.create(options)
	
	local Logo = options.Logo or 11107231085
	local Title = options.Title or "ww's Team"
	local ColorUI = options.ColorUI or _G.Settings.Color

	local FocusUI = false

	local PageOrders = -1

	local Main = Instance.new("Frame")
	local MainUICorner = Instance.new("UICorner")
	local OntopPage = Instance.new("Frame")
	local TitleUI = Instance.new("TextLabel")
	local UICorner = Instance.new("UICorner")
	local LogoUI = Instance.new("ImageLabel")
	local Scrollbar = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local LogoBar = Instance.new("ImageLabel")
	local Scrollingbar = Instance.new("ScrollingFrame")
	local ScrollingbarUIListLayout = Instance.new("UIListLayout")
	local ScrollingbarUIPadding = Instance.new("UIPadding")
	local Main2 = Instance.new("Frame")
	local ContainerPage = Instance.new("Frame")
	local FolderPage = Instance.new("Folder")
	local FolderPageUIPageLayout = Instance.new("UIPageLayout")

	Main.Name = "Main"
	Main.Parent = UILibrary
	Main.AnchorPoint = Vector2.new(0.5,0.5)
	Main.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	Main.Position = UDim2.new(0.5, 0, 0.5, 0)
	Main.Size = UDim2.new(0, 0, 0, 0)
	Main.ClipsDescendants = true
	
	local Glow = Instance.new("ImageLabel")

	Glow.Name = "Glow"
	Glow.Parent = Main
	Glow.Active = true
	Glow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Glow.BackgroundTransparency = 1.000
	Glow.Position = UDim2.new(-0.0519999973, 0, -0.0522075593, 0)
	Glow.Size = UDim2.new(0, 465, 0, 501)
	Glow.Image = "rbxassetid://5028857084"
	Glow.ImageColor3 = ColorUI
	Glow.ImageTransparency = 1
	
	TweenService:Create(
		Main,
		TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out),
		{Size = UDim2.new(0, 420, 0, 453)}
	):Play()
	repeat wait() until Main.Size == UDim2.new(0, 420, 0, 453)
	Main.ClipsDescendants = false
	TweenService:Create(
		Glow,
		TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
		{ImageTransparency = 0}
	):Play()

	MainUICorner.CornerRadius = UDim.new(0, 4)
	MainUICorner.Name = "MainUICorner"
	MainUICorner.Parent = Main

	OntopPage.Name = "OntopPage"
	OntopPage.Parent = Main
	OntopPage.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	OntopPage.BorderSizePixel = 0
	OntopPage.Size = UDim2.new(0, 420, 0, 27)
	
	local KeyButton = Instance.new("TextButton")

	KeyButton.Name = "KeyButton"
	KeyButton.Parent = OntopPage
	KeyButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	KeyButton.BackgroundTransparency = 1.000
	KeyButton.BorderColor3 = Color3.fromRGB(27, 42, 53)
	KeyButton.Position = UDim2.new(0.761467874, 0, 0, 0)
	KeyButton.Size = UDim2.new(0, 104, 0, 27)
	KeyButton.AutoButtonColor = false
	KeyButton.Font = Enum.Font.Gotham
	KeyButton.Text = "[ " .. _G.Settings.Key.Name .." ] "
	KeyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	KeyButton.TextSize = 12.000
	KeyButton.TextTransparency = 0.450
	KeyButton.TextWrapped = true
	
	KeyButton.MouseButton1Click:Connect(function()
		KeyButton.Text = "Select Key"
		local inputwait = UserInputService.InputBegan:wait()
		if inputwait.KeyCode.Name ~= "Unknown" then
			_G.Settings.Key = inputwait.KeyCode
			KeyButton.Text = "[ " .. _G.Settings.Key.Name .." ] "

			Key = inputwait.KeyCode.Name
		end
	end)
	local uitoggled = false
	UserInputService.InputBegan:Connect(function(io, p)
		if io.KeyCode == _G.Settings.Key then
			if uitoggled == false then
				uitoggled = true
				TweenService:Create(
					Main,
					TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
					{Size = UDim2.new(0, 0, 0, 0)}
				):Play()
				Main.ClipsDescendants = true
				TweenService:Create(
					Glow,
					TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
					{ImageTransparency = 1}
				):Play()
			else
				TweenService:Create(
					Main,
					TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out),
					{Size = UDim2.new(0, 420, 0, 453)}
				):Play()
				TweenService:Create(
					Glow,
					TweenInfo.new(.5, Enum.EasingStyle.Quart, Enum.EasingDirection.In),
					{ImageTransparency = 0}
				):Play()
				repeat wait() until Main.Size == UDim2.new(0, 420, 0, 453)
				uitoggled = false
				Main.ClipsDescendants = false
			end
		end
	end)

	TitleUI.Name = "TitleUI"
	TitleUI.Parent = OntopPage
	TitleUI.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TitleUI.BackgroundTransparency = 1.000
	TitleUI.Position = UDim2.new(0.0672380701, 0, 0, 0)
	TitleUI.Size = UDim2.new(0, 420, 0, 27)
	TitleUI.Font = Enum.Font.GothamMedium
	TitleUI.Text = tostring(Title)
	TitleUI.TextColor3 = Color3.fromRGB(255, 255, 255)
	TitleUI.TextSize = 17.000
	TitleUI.TextWrapped = true
	TitleUI.TextXAlignment = Enum.TextXAlignment.Left

	UICorner.CornerRadius = UDim.new(0, 6)
	UICorner.Parent = OntopPage

	LogoUI.Name = "LogoUI"
	LogoUI.Parent = OntopPage
	LogoUI.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	LogoUI.BackgroundTransparency = 1.000
	LogoUI.Position = UDim2.new(0.0133333337, 0, 0, 0)
	LogoUI.Size = UDim2.new(0, 18, 0, 18)
	LogoUI.Image = "http://www.roblox.com/asset/?id="..tostring(Logo)

	Scrollbar.Name = "Scrollbar"
	Scrollbar.Parent = Main
	Scrollbar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	Scrollbar.BorderSizePixel = 0
	Scrollbar.Position = UDim2.new(0, 0, 0.059602648, 0)
	Scrollbar.Size = UDim2.new(0, 165, 0, 426)

	UICorner_2.CornerRadius = UDim.new(0, 1)
	UICorner_2.Parent = Scrollbar

	LogoBar.Name = "LogoBar"
	LogoBar.Parent = Scrollbar
	LogoBar.AnchorPoint = Vector2.new(0.5, 0.5)
	LogoBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	LogoBar.BackgroundTransparency = 1.000
	LogoBar.Position = UDim2.new(0.4939394, 0, 0.0983098745, 0)
	LogoBar.Size = UDim2.new(0, 80, 0, 80)
	LogoBar.Image = "http://www.roblox.com/asset/?id="..tostring(Logo)

	Scrollingbar.Name = "Scrollingbar"
	Scrollingbar.Parent = Scrollbar
	Scrollingbar.Active = true
	Scrollingbar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Scrollingbar.BackgroundTransparency = 1.000
	Scrollingbar.BorderSizePixel = 0
	Scrollingbar.Position = UDim2.new(0, 0, 0.216854468, 0)
	Scrollingbar.Size = UDim2.new(0, 165, 0, 333)
	Scrollingbar.ZIndex = 9
	Scrollingbar.ScrollBarThickness = 4

	ScrollingbarUIListLayout.Name = "ScrollingbarUIListLayout"
	ScrollingbarUIListLayout.Parent = Scrollingbar
	ScrollingbarUIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	ScrollingbarUIListLayout.Padding = UDim.new(0, 5)

	ScrollingbarUIListLayout:GetPropertyChangedSignal('AbsoluteContentSize'):Connect(function()
		Scrollingbar.CanvasSize = UDim2.new(0,0,0,ScrollingbarUIListLayout.AbsoluteContentSize.Y + 15)
	end)

	ScrollingbarUIPadding.Name = "ScrollingbarUIPadding"
	ScrollingbarUIPadding.Parent = Scrollingbar
	ScrollingbarUIPadding.PaddingLeft = UDim.new(0, 10)
	ScrollingbarUIPadding.PaddingTop = UDim.new(0, 15)

	Main2.Name = "Main2"
	Main2.Parent = Main
	Main2.Active = true
	Main2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Main2.BackgroundTransparency = 1.000
	Main2.Position = UDim2.new(0.378, 0, 0.059602648, 0)
	Main2.Size = UDim2.new(0, 261, 0, 426)

	ContainerPage.Name = "ContainerPage"
	ContainerPage.Parent = Main2
	ContainerPage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ContainerPage.BackgroundTransparency = 1.000
	ContainerPage.Size = UDim2.new(0, 261, 0, 426)
	ContainerPage.ClipsDescendants = true

	FolderPage.Name = "FolderPage"
	FolderPage.Parent = ContainerPage

	FolderPageUIPageLayout.Name = "FolderPageUIPageLayout"
	FolderPageUIPageLayout.Parent = FolderPage
	FolderPageUIPageLayout.SortOrder = Enum.SortOrder.LayoutOrder
	FolderPageUIPageLayout.EasingStyle = Enum.EasingStyle.Back
	FolderPageUIPageLayout.FillDirection = Enum.FillDirection.Vertical
	FolderPageUIPageLayout.Padding = UDim.new(0, 10)
	FolderPageUIPageLayout.TweenTime = 0.300

	MakeDraggable(OntopPage,Main)

	local LibraryTab = {}

	function LibraryTab.create(options)
		
		local Title = options.Title or "ww's Tab"
		
		local MainBarFrame = Instance.new("Frame")
		local MainBarButton = Instance.new("TextButton")
		local Blank = Instance.new("TextLabel")
		local MainBarFrameMain = Instance.new("Frame")
		local TitleMainBar = Instance.new("TextLabel")
		local Arrow = Instance.new("ImageLabel")

		MainBarFrame.Name = "MainBarFrame"
		MainBarFrame.Parent = Scrollingbar
		MainBarFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		MainBarFrame.BackgroundTransparency = 1.000
		MainBarFrame.ClipsDescendants = true
		MainBarFrame.Size = UDim2.new(0, 138, 0, 26)

		MainBarButton.Name = "MainBarButton"
		MainBarButton.Parent = MainBarFrame
		MainBarButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		MainBarButton.BackgroundTransparency = 1.000
		MainBarButton.Size = UDim2.new(0, 138, 0, 26)
		MainBarButton.Font = Enum.Font.SourceSans
		MainBarButton.Text = ""
		MainBarButton.TextColor3 = Color3.fromRGB(0, 0, 0)
		MainBarButton.TextSize = 14.000

		local MainBarButtonFocus = false

		Blank.Name = "Blank"
		Blank.Parent = MainBarButton
		Blank.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Blank.BackgroundTransparency = 1.000
		Blank.Size = UDim2.new(0, 138, 0, 26)
		Blank.Font = Enum.Font.SourceSans
		Blank.Text = ""
		Blank.TextColor3 = Color3.fromRGB(0, 0, 0)
		Blank.TextSize = 14.000

		MainBarFrameMain.Name = "MainBarFrameMain"
		MainBarFrameMain.Parent = Blank
		MainBarFrameMain.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		MainBarFrameMain.BackgroundTransparency = 1.000
		MainBarFrameMain.Size = UDim2.new(0, 138, 0, 26)

		TitleMainBar.Name = "TitleMainBar"
		TitleMainBar.Parent = MainBarFrameMain
		TitleMainBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TitleMainBar.BackgroundTransparency = 1.000
		TitleMainBar.Size = UDim2.new(0, 138, 0, 26)
		TitleMainBar.Font = Enum.Font.GothamMedium
		TitleMainBar.TextColor3 = Color3.fromRGB(144, 144, 144)
		TitleMainBar.TextSize = 12.000
		TitleMainBar.Text = tostring(Title)
		TitleMainBar.TextXAlignment = Enum.TextXAlignment.Left

		Arrow.Name = "Arrow"
		Arrow.Parent = MainBarFrameMain
		Arrow.AnchorPoint = Vector2.new(0.5, 0.5)
		Arrow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Arrow.BackgroundTransparency = 1.000
		Arrow.ClipsDescendants = true
		Arrow.Position = UDim2.new(0.899999976, 0, 0.5, 0)
		Arrow.Rotation = 180.000
		Arrow.Size = UDim2.new(0, 17, 0, 17)
		Arrow.Image = "rbxassetid://6031094687"
		Arrow.ImageColor3 = Color3.fromRGB(179, 179, 179)

		local BarContain = Instance.new("TextLabel")

		BarContain.Name = "BarContain"
		BarContain.Parent = Scrollingbar
		BarContain.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		BarContain.BackgroundTransparency = 1.000
		BarContain.Position = UDim2.new(0, 0, 0.230000004, 0)
		BarContain.Size = UDim2.new(0, 113, 0, 0)
		BarContain.Font = Enum.Font.Gotham
		BarContain.Text = ""
		BarContain.TextColor3 = Color3.fromRGB(255, 255, 255)
		BarContain.TextSize = 15.000
		BarContain.TextTransparency = 0.300
		BarContain.TextXAlignment = Enum.TextXAlignment.Left
		BarContain.ClipsDescendants = true

		local BarContainTabUIListLayout = Instance.new("UIListLayout")

		BarContainTabUIListLayout.Name = "BarContainTabUIListLayout"
		BarContainTabUIListLayout.Parent = BarContain
		BarContainTabUIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		BarContainTabUIListLayout.Padding = UDim.new(0, 5)

		MainBarButton.MouseButton1Down:Connect(function()
			if MainBarButtonFocus == false then
				TweenService:Create(
					BarContain,
					TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
					{Size = UDim2.new(0, 113, 0,BarContainTabUIListLayout.AbsoluteContentSize.Y + 5)}
				):Play()
				TweenService:Create(
					Arrow,
					TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Rotation = 0}
				):Play()
			else
				TweenService:Create(
					BarContain,
					TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Size = UDim2.new(0, 113, 0, 0)}
				):Play()
				TweenService:Create(
					Arrow,
					TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Rotation = 180}
				):Play()
			end
			BarContain.ClipsDescendants = not BarContain.ClipsDescendants
			MainBarButtonFocus = not MainBarButtonFocus
		end)
		
		function Library.Notification(options)
			
			local Title = options.Title or "ww's Notification"
			local Desc = options.Desc or "ww's Descriptions"
			local Under = options.Under or "ww's Button"
			local visualDelays = options.Delays or 10
			local ColorUI = options.ColorUI or _G.Settings.ColorUI
			
			local Notification = Instance.new("Frame")
			local FrameMain = Instance.new("Frame")
			local FrameMainCorner = Instance.new("UICorner")
			local Glow = Instance.new("ImageLabel")
			local ButtonNotiFrame = Instance.new("TextButton")
			local ButtonCorner = Instance.new("UICorner")
			local Text1 = Instance.new("TextLabel")
			local Text2 = Instance.new("TextLabel")
			
			local Line1 = Instance.new("Frame")
			local Line2 = Instance.new("Frame")

			Line1.Name = "Line1"
			Line1.Parent = FrameMain
			Line1.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
			Line1.BorderSizePixel = 0
			Line1.Position = UDim2.new(0.032000035, 0, 0.75, 0)
			Line1.Size = UDim2.new(0, 330, 0, 4)

			Line2.Name = "Line2"
			Line2.Parent = Line1
			Line2.Active = true
			Line2.BackgroundColor3 = ColorUI
			Line2.BorderSizePixel = 0
			Line2.Size = UDim2.new(0, 330, 0, 3)

			Notification.Name = "Notification"
			Notification.Parent = Main
			Notification.Active = true
			Notification.AnchorPoint = Vector2.new(0.5, 0.5)
			Notification.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Notification.BackgroundTransparency = 0.100
			Notification.ClipsDescendants = true
			Notification.Position = UDim2.new(0.5, 0, 0.5, 0)
			Notification.Size = UDim2.new(0, 0, 0, 0)
			Notification.BorderSizePixel = 0
			
			Notification:TweenSizeAndPosition(UDim2.new(0, 420, 0, 453),  UDim2.new(0.5, 0, 0.5,0), "Out", "Back", 0.2, true)

			FrameMain.Name = "FrameMain"
			FrameMain.Parent = Notification
			FrameMain.AnchorPoint = Vector2.new(0.5, 0.5)
			FrameMain.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
			FrameMain.BorderColor3 = Color3.fromRGB(20, 20, 20)
			FrameMain.Position = UDim2.new(0.5, 0, 0.469293594, 0)
			FrameMain.Size = UDim2.new(0, 0, 0, 0)
			
			wait(.1)
			FrameMain:TweenSizeAndPosition(UDim2.new(0, 350, 0, 222),  UDim2.new(0.5, 0, 0.5,0), "Out", "Back", 0.2, true)

			FrameMainCorner.Name = "FrameMainCorner"
			FrameMainCorner.Parent = FrameMain

			Glow.Name = "Glow"
			Glow.Parent = FrameMain
			Glow.Active = true
			Glow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			Glow.BackgroundTransparency = 1.000
			Glow.Position = UDim2.new(-0.0520000346, 0, -0.0500000007, 0)
			Glow.Size = UDim2.new(0, 388, 0, 242)
			Glow.Image = "rbxassetid://5028857084"
			Glow.ImageColor3 = Color3.fromRGB(25, 25, 25)

			ButtonNotiFrame.Name = "ButtonNotiFrame"
			ButtonNotiFrame.Parent = FrameMain
			ButtonNotiFrame.BackgroundColor3 = ColorUI
			ButtonNotiFrame.AnchorPoint = Vector2.new(0.5,0.5)
			ButtonNotiFrame.Position = UDim2.new(0.5, 0, 0.85, 0)
			ButtonNotiFrame.Size = UDim2.new(0, 330, 0, 30)
			ButtonNotiFrame.AutoButtonColor = false
			ButtonNotiFrame.Font = Enum.Font.Gotham
			ButtonNotiFrame.Text = Under
			ButtonNotiFrame.TextColor3 = Color3.fromRGB(255, 255, 255)
			ButtonNotiFrame.TextSize = 12.000

			ButtonCorner.CornerRadius = UDim.new(0, 4)
			ButtonCorner.Name = "ButtonCorner"
			ButtonCorner.Parent = ButtonNotiFrame

			Text1.Name = "Text1"
			Text1.Parent = FrameMain
			Text1.Active = true
			Text1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Text1.BackgroundTransparency = 1.000
			Text1.Position = UDim2.new(0.032000035, 0, 0.135000005, 0)
			Text1.Size = UDim2.new(0, 330, 0, 26)
			Text1.Font = Enum.Font.GothamMedium
			Text1.Text = Title
			Text1.TextColor3 = Color3.fromRGB(255, 255, 255)
			Text1.TextSize = 14.000
			Text1.TextTransparency = 0.500

			Text2.Name = "Text2"
			Text2.Parent = FrameMain
			Text2.Active = true
			Text2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Text2.BackgroundTransparency = 1.000
			Text2.Position = UDim2.new(0.032000035, 0, 0.319999993, 0)
			Text2.Size = UDim2.new(0, 330, 0, 89)
			Text2.Font = Enum.Font.Gotham
			Text2.Text = Desc
			Text2.TextColor3 = Color3.fromRGB(255, 255, 255)
			Text2.TextSize = 12.000
			Text2.TextTransparency = 0.500
			Text2.TextWrapped = true
			Text2.TextYAlignment = Enum.TextYAlignment.Top
			
			ButtonNotiFrame.MouseEnter:Connect(function()
				TweenService:Create(
					ButtonNotiFrame,
					TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundTransparency = 0}
				):Play()
				TweenService:Create(
					ButtonNotiFrame,
					TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextTransparency = 0}
				):Play()
				TweenService:Create(
					ButtonNotiFrame,
					TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Size = UDim2.new(0, 300, 0, 34)}
				):Play()
			end)

			ButtonNotiFrame.MouseLeave:Connect(function()
				TweenService:Create(
					ButtonNotiFrame,
					TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundTransparency = 0.5}
				):Play()
				TweenService:Create(
					ButtonNotiFrame,
					TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextTransparency = 0.65}
				):Play()
				TweenService:Create(
					ButtonNotiFrame,
					TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Size = UDim2.new(0, 330, 0, 30)}
				):Play()
			end)
			
			ButtonNotiFrame.MouseButton1Click:Connect(function()
				CircleAnim(ButtonNotiFrame,Color3.fromRGB(255,255,255),Color3.fromRGB(255,255,255))
				TweenService:Create(
					Notification,
					TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundTransparency = 1}
				):Play()
				Notification:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
				TweenService:Create(
					Notification,
					TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundTransparency = 1}
				):Play()
				wait(.2)
				Notification:Destroy()
			end)
			
			TweenService:Create(
				Line2,
				TweenInfo.new(tonumber(visualDelays), Enum.EasingStyle.Sine, Enum.EasingDirection.Out),
				{Size = UDim2.new(0, 0, 0, 5)} -- UDim2.new(0, 128, 0, 25)
			):Play()
			delay(tonumber(visualDelays),function()
				TweenService:Create(
					Notification,
					TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundTransparency = 1}
				):Play()
				Notification:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
				TweenService:Create(
					Notification,
					TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundTransparency = 1}
				):Play()
				wait(.2)
				Notification:Destroy()
			end)
		end
		
		
		local LibrarySection = {}

		function LibrarySection.SectionTab(options)
			
			local Logo = options.Logo or 11107231085
			local Title = options.Title or "ww's Tab"

			PageOrders = PageOrders + 1

			local name = tostring(Title) or tostring(math.random(500,100000))

			local BarContainTab = Instance.new("Frame")
			local ButtonBar = Instance.new("TextButton")
			local Icon = Instance.new("ImageLabel")
			local Name = Instance.new("TextLabel")

			BarContainTab.Name = "BarContainTab"
			BarContainTab.Parent = BarContain
			BarContainTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			BarContainTab.BackgroundTransparency = 1.000
			BarContainTab.ClipsDescendants = true
			BarContainTab.Size = UDim2.new(0, 140, 0, 30)

			ButtonBar.Name = "ButtonBar"
			ButtonBar.Parent = BarContainTab
			ButtonBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ButtonBar.BackgroundTransparency = 1.000
			ButtonBar.Size = UDim2.new(0, 138, 0, 29)
			ButtonBar.AutoButtonColor = false
			ButtonBar.Font = Enum.Font.SourceSans
			ButtonBar.Text = ""
			ButtonBar.TextColor3 = Color3.fromRGB(0, 0, 0)
			ButtonBar.TextSize = 1.000

			Icon.Name = "Icon"
			Icon.Parent = ButtonBar
			Icon.AnchorPoint = Vector2.new(0.5, 0.5)
			Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Icon.BackgroundTransparency = 1.000
			Icon.Position = UDim2.new(0.100000001, 0, 0.5, 0)
			Icon.Size = UDim2.new(0, 16, 0, 16)
			Icon.Image = "http://www.roblox.com/asset/?id="..tostring(Logo) --10626897521
			Icon.ImageColor3 = Color3.fromRGB(255, 255, 255)
			Icon.ImageTransparency = 0.65

			Name.Name = "Name"
			Name.Parent = ButtonBar
			Name.AnchorPoint = Vector2.new(0.5, 0.5)
			Name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Name.BackgroundTransparency = 1.000
			Name.Position = UDim2.new(0.529999971, 0, 0.5, 0)
			Name.Size = UDim2.new(0, 79, 0, 27)
			Name.Font = Enum.Font.GothamMedium
			Name.TextColor3 = Color3.fromRGB(255, 255, 255)
			Name.TextSize = 11.000
			Name.Text = tostring(Title)
			Name.TextXAlignment = Enum.TextXAlignment.Left
			Name.TextTransparency = 0.65

			local MainPage = Instance.new("Frame")
			local MainPageUICorner = Instance.new("UICorner")
			local ScrollingMainPage = Instance.new("ScrollingFrame")
			local ScrollingMainPageUIListLayout = Instance.new("UIListLayout")
			local ScrollingMainPageUIPadding = Instance.new("UIPadding")

			MainPage.Name = name.."_MainPage"
			MainPage.Parent = FolderPage
			MainPage.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
			MainPage.Size = UDim2.new(0, 271, 0, 426)

			MainPage.LayoutOrder = PageOrders

			MainPageUICorner.CornerRadius = UDim.new(0, 3)
			MainPageUICorner.Name = "MainPageUICorner"
			MainPageUICorner.Parent = MainPage

			ScrollingMainPage.Name = "ScrollingMainPage"
			ScrollingMainPage.Parent = MainPage
			ScrollingMainPage.Active = true
			ScrollingMainPage.AnchorPoint = Vector2.new(0.5, 0.5)
			ScrollingMainPage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ScrollingMainPage.BackgroundTransparency = 1.000
			ScrollingMainPage.BorderSizePixel = 0
			ScrollingMainPage.Position = UDim2.new(0.5, 0, 0.5, 0)
			ScrollingMainPage.Size = UDim2.new(0, 271, 0, 419)
			ScrollingMainPage.ScrollBarThickness = 4

			ScrollingMainPageUIListLayout.Name = "ScrollingMainPageUIListLayout"
			ScrollingMainPageUIListLayout.Parent = ScrollingMainPage
			ScrollingMainPageUIListLayout.FillDirection = Enum.FillDirection.Vertical
			ScrollingMainPageUIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
			ScrollingMainPageUIListLayout.Padding = UDim.new(0, 5)

			ScrollingMainPageUIPadding.Name = "ScrollingMainPageUIPadding"
			ScrollingMainPageUIPadding.Parent = ScrollingMainPage
			ScrollingMainPageUIPadding.PaddingLeft = UDim.new(0, 5)
			ScrollingMainPageUIPadding.PaddingTop = UDim.new(0, 5)
			
			ScrollingMainPageUIListLayout:GetPropertyChangedSignal('AbsoluteContentSize'):Connect(function()
				ScrollingMainPage.CanvasSize = UDim2.new(0,0,0,ScrollingMainPageUIListLayout.AbsoluteContentSize.Y + 15)
			end)

			local ButtonBarFocus = false
			
			ButtonBar.MouseEnter:Connect(function()
				if ButtonBarFocus == false then
					TweenService:Create(
						Name,
						TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0}
					):Play()
					TweenService:Create(
						Icon,
						TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = 0}
					):Play()
				end
			end)
			
			ButtonBar.MouseLeave:Connect(function()
				if ButtonBarFocus == false then
					TweenService:Create(
						Name,
						TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextTransparency = 0.65}
					):Play()
					TweenService:Create(
						Icon,
						TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{ImageTransparency = 0.65}
					):Play()
				end
			end)

			ButtonBar.MouseButton1Click:connect(function()
				if MainPage.Name == name.."_MainPage" then
					FolderPageUIPageLayout:JumpToIndex(MainPage.LayoutOrder)
				end

				for e,BarContainErk in pairs(Scrollingbar:GetDescendants()) do
					if BarContainErk.Name == "BarContain" and BarContainErk:IsA("TextLabel") then
						for i ,v in next , BarContainErk:GetChildren() do
							if v:IsA("Frame") then
								for o,p in pairs(v:GetChildren()) do
									for b,i in pairs(p:GetChildren()) do
										if i.Name == "Name" and i:IsA("TextLabel") then
											TweenService:Create(
												i,
												TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
												{TextTransparency = 0.65}
											):Play()
										elseif i.Name == "Icon" and i:IsA("ImageLabel") then
											TweenService:Create(
												i,
												TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
												{ImageTransparency = 0.65}
											):Play()
										end
									end
								end
							end
							TweenService:Create(
								Name,
								TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0}
							):Play()
							TweenService:Create(
								Icon,
								TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{ImageTransparency = 0}
							):Play()
						end
					end
				end
				ButtonBarFocus = not ButtonBarFocus
			end)

			if FocusUI == false then
				TweenService:Create(
					Name,
					TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextTransparency = 0}
				):Play()
				TweenService:Create(
					Icon,
					TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{ImageTransparency = 0}
				):Play()
				MainPage.Visible = true
				MainPage.Name  = name.."_MainPage"
				FocusUI  = true
			end

			local LibraryPage = {}

			function LibraryPage.page()
				local PageFrame = Instance.new("Frame")
				local PageFrameUIListLayout = Instance.new("UIListLayout")
				local PageFrameUIPadding = Instance.new("UIPadding")

				PageFrame.Name = "PageFrame"
				PageFrame.Parent = ScrollingMainPage
				PageFrame.Active = true
				PageFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				PageFrame.BackgroundTransparency = 1
				PageFrame.Size = UDim2.new(0, 250, 0, 100)

				PageFrameUIListLayout.Name = "PageFrameUIListLayout"
				PageFrameUIListLayout.Parent = PageFrame
				PageFrameUIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
				PageFrameUIListLayout.Padding = UDim.new(0, 5)

				PageFrameUIPadding.Name = "PageFrameUIPadding"
				PageFrameUIPadding.Parent = PageFrame
				PageFrameUIPadding.PaddingLeft = UDim.new(0, 5)
				PageFrameUIPadding.PaddingTop = UDim.new(0, 5)	
				
				game:GetService("RunService").Stepped:Connect(function ()
					pcall(function ()
						PageFrame.Size =  UDim2.new(0, 250, 0,PageFrameUIListLayout.AbsoluteContentSize.Y + 0)
					end)
				end)

				local LibraryFunction = {}
				
				function LibraryFunction.Color(options)
					
					local Title = options.Title or "Color Picker"
					local preset = options.preset or Color3.fromRGB(255, 255, 255)
					local callback = options.callback or function() end
					
					local Pixker = Instance.new("Frame")
					local PixkerUICorner = Instance.new("UICorner")
					local TextFrameColor = Instance.new("TextLabel")
					local TextReal = Instance.new("TextLabel")
					local BoxColor = Instance.new("Frame")
					local BoxColorCorner = Instance.new("UICorner")
					local TextButton_Dropdown = Instance.new("TextButton")

					Pixker.Name = "Pixker"
					Pixker.Parent = PageFrame
					Pixker.Active = true
					Pixker.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
					Pixker.BackgroundTransparency = 0.450
					Pixker.Size = UDim2.new(0, 240, 0, 34)
					Pixker.ClipsDescendants = true

					PixkerUICorner.CornerRadius = UDim.new(0, 4)
					PixkerUICorner.Name = "PixkerUICorner"
					PixkerUICorner.Parent = Pixker

					TextFrameColor.Name = "TextFrameColor"
					TextFrameColor.Parent = Pixker
					TextFrameColor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					TextFrameColor.BackgroundTransparency = 1.000
					TextFrameColor.Size = UDim2.new(0, 240, 0, 34)
					TextFrameColor.Font = Enum.Font.SourceSans
					TextFrameColor.Text = ""
					TextFrameColor.TextColor3 = Color3.fromRGB(0, 0, 0)
					TextFrameColor.TextSize = 14.000

					TextReal.Name = "TextReal"
					TextReal.Parent = TextFrameColor
					TextReal.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					TextReal.BackgroundTransparency = 1.000
					TextReal.Position = UDim2.new(0.0359999985, 0, 0, 0)
					TextReal.Size = UDim2.new(0, 176, 0, 34)
					TextReal.Font = Enum.Font.GothamBold
					TextReal.TextColor3 = Color3.fromRGB(255, 255, 255)
					TextReal.TextSize = 14.000
					TextReal.Text = Title
					TextReal.TextTransparency = 0.450
					TextReal.TextXAlignment = Enum.TextXAlignment.Left

					BoxColor.Name = "BoxColor"
					BoxColor.Parent = TextFrameColor
					BoxColor.Active = true
					BoxColor.AnchorPoint = Vector2.new(0.5, 0.5)
					BoxColor.BackgroundColor3 = preset
					BoxColor.Position = UDim2.new(0.899999976, 0, 0.5, 0)
					BoxColor.Size = UDim2.new(0, 35, 0, 19)

					BoxColorCorner.CornerRadius = UDim.new(0, 4)
					BoxColorCorner.Name = "BoxColorCorner"
					BoxColorCorner.Parent = BoxColor

					TextButton_Dropdown.Name = "TextButton_Dropdown"
					TextButton_Dropdown.Parent = TextFrameColor
					TextButton_Dropdown.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					TextButton_Dropdown.BackgroundTransparency = 1.000
					TextButton_Dropdown.Size = UDim2.new(0, 240, 0, 34)
					TextButton_Dropdown.Font = Enum.Font.SourceSans
					TextButton_Dropdown.Text = ""
					TextButton_Dropdown.TextColor3 = Color3.fromRGB(0, 0, 0)
					TextButton_Dropdown.TextSize = 14.000
					
					local TextButton_2_Toggle = Instance.new("ImageButton")
					local TextButton_3_Toggle2 = Instance.new("TextButton")
					local Hue = Instance.new("ImageLabel")
					local ColorFucj = Instance.new("UICorner")
					local HueSelection = Instance.new("ImageLabel")
					local HueGradient = Instance.new("UIGradient")
					local Color = Instance.new("ImageLabel")
					local ColorFucj_2 = Instance.new("UICorner")
					local ColorSelection = Instance.new("ImageLabel")

					TextButton_2_Toggle.Name = "TextButton_2_Toggle"
					TextButton_2_Toggle.Parent = TextFrameColor
					TextButton_2_Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					TextButton_2_Toggle.BackgroundTransparency = 1.000
					TextButton_2_Toggle.Position = UDim2.new(0.0359999985, 0, 1.2647059, 0)
					TextButton_2_Toggle.Size = UDim2.new(0, 25, 0, 25)
					TextButton_2_Toggle.Image = "http://www.roblox.com/asset/?id=6031625148"

					TextButton_3_Toggle2.Name = "TextButton_3_Toggle2"
					TextButton_3_Toggle2.Parent = TextButton_2_Toggle
					TextButton_3_Toggle2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					TextButton_3_Toggle2.BackgroundTransparency = 1.000
					TextButton_3_Toggle2.Position = UDim2.new(1.37256098, 0, 0, 0)
					TextButton_3_Toggle2.Size = UDim2.new(0, 199, 0, 25)
					TextButton_3_Toggle2.Font = Enum.Font.Gotham
					TextButton_3_Toggle2.Text = "Rainbows"
					TextButton_3_Toggle2.TextColor3 = Color3.fromRGB(255, 255, 255)
					TextButton_3_Toggle2.TextSize = 14.000
					TextButton_3_Toggle2.TextTransparency = 0.450
					TextButton_3_Toggle2.TextXAlignment = Enum.TextXAlignment.Left
					
					local OMF = Instance.new("TextButton")

					OMF.Parent = TextButton_2_Toggle
					OMF.BackgroundTransparency = 1
					OMF.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					OMF.BorderSizePixel = 0
					OMF.Size = UDim2.new(0, 100, 0, 20)
					OMF.AutoButtonColor = false
					OMF.Font = Enum.Font.SourceSans
					OMF.Text = " "
					OMF.TextColor3 = Color3.fromRGB(0, 0, 0)
					OMF.TextSize = 12.000
					OMF.AnchorPoint = Vector2.new(0.5, 0.5)
					OMF.Position = UDim2.new(2, 0, 0.5, 0)

					local Color =  Instance.new("ImageLabel")

					Color.Name = "Color"
					Color.Parent = TextFrameColor
					Color.BackgroundColor3 = Color3.fromRGB(255, 0, 4)
					Color.Position = UDim2.new(0.05,0,4.3,0)
					Color.Size = UDim2.new(0, 210, 0, 50)
					Color.ZIndex = 0
					Color.BorderSizePixel = 0
					Color.Image = "rbxassetid://4155801252"

					local ColorFucj = Instance.new("UICorner")

					ColorFucj.CornerRadius = UDim.new(0, 4)
					ColorFucj.Name = ""
					ColorFucj.Parent = Color

					local ColorSelection =  Instance.new("ImageLabel")

					ColorSelection.Name = "ColorSelection"
					ColorSelection.Parent = Color
					ColorSelection.AnchorPoint = Vector2.new(0.5, 0.5)
					ColorSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					ColorSelection.BackgroundTransparency = 1.000
					ColorSelection.Position = UDim2.new(preset and select(3, Color3.toHSV(preset)))
					ColorSelection.Size = UDim2.new(0, 18, 0, 18)
					ColorSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
					ColorSelection.ScaleType = Enum.ScaleType.Fit
					ColorSelection.Visible = true

					local Hue =  Instance.new("ImageLabel")

					Hue.Name = "Hue2"
					Hue.Parent = TextFrameColor
					Hue.Position = UDim2.new(0.05,0,3.4,0)
					Hue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Hue.Size = UDim2.new(0, 210, 0, 25)
					Hue.ZIndex = 0
					Hue.BorderSizePixel = 0

					local ColorFucj2 = Instance.new("UICorner")

					ColorFucj2.CornerRadius = UDim.new(0, 4)
					ColorFucj2.Name = ""
					ColorFucj2.Parent = Hue

					local HueGradient = Instance.new("UIGradient")

					HueGradient.Color = ColorSequence.new {
						ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 4)),
						ColorSequenceKeypoint.new(0.20, Color3.fromRGB(234, 255, 0)),
						ColorSequenceKeypoint.new(0.40, Color3.fromRGB(21, 255, 0)),
						ColorSequenceKeypoint.new(0.60, Color3.fromRGB(0, 255, 255)),
						ColorSequenceKeypoint.new(0.80, Color3.fromRGB(0, 17, 255)),
						ColorSequenceKeypoint.new(0.90, Color3.fromRGB(255, 0, 251)),
						ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 4))
					}
					HueGradient.Rotation = 0
					HueGradient.Name = "HueGradient"
					HueGradient.Parent = Hue

					local HueSelection =  Instance.new("ImageLabel")

					HueSelection.Name = "HueSelection"
					HueSelection.Parent = Hue
					HueSelection.AnchorPoint = Vector2.new(0.5, 0.5)
					HueSelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					HueSelection.BackgroundTransparency = 1.000
					HueSelection.Position = UDim2.new(preset and select(3, Color3.toHSV(preset)))
					HueSelection.Size = UDim2.new(0, 18, 0, 18)
					HueSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
					HueSelection.ScaleType = Enum.ScaleType.Fit
					HueSelection.Visible = true
					
					local TextRGB = Instance.new("TextLabel")

					TextRGB.Name = "TextRGB"
					TextRGB.Parent = TextFrameColor
					TextRGB.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					TextRGB.BackgroundTransparency = 1.000
					TextRGB.Position = UDim2.new(0.0359999985, 0, 5.75, 0)
					TextRGB.Size = UDim2.new(0, 220, 0, 29)
					TextRGB.Font = Enum.Font.GothamBold
					TextRGB.TextColor3 = Color3.fromRGB(255, 255, 255)
					TextRGB.TextSize = 14.000
					TextRGB.TextTransparency = 0.450
					TextRGB.Text = "RGB: " .. math.round(BoxColor.BackgroundColor3.R* 255) .. "," .. math.round(BoxColor.BackgroundColor3.G * 255) .. "," .. math.round(BoxColor.BackgroundColor3.B * 255)
					
					local TextTransparency = Instance.new("TextLabel")

					TextTransparency.Name = "TextTransparency"
					TextTransparency.Parent = TextFrameColor
					TextTransparency.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					TextTransparency.BackgroundTransparency = 1.000
					TextTransparency.Position = UDim2.new(-0.3, 0, 2.1, 0)
					TextTransparency.Size = UDim2.new(0, 220, 0, 29)
					TextTransparency.Font = Enum.Font.GothamBold
					TextTransparency.TextColor3 = Color3.fromRGB(255, 255, 255)
					TextTransparency.TextSize = 14.000
					TextTransparency.TextTransparency = 0.45
					TextTransparency.Text = tostring(0 and string.format("%.1f",(0 / 1) * (1 - 0.2) + 0.2) or 0)
					
					local SliderValueFrame = Instance.new("Frame")
					local SliderValueFrame_2 = Instance.new("Frame")
					local SliderValueFrame_3 = Instance.new("Frame")
					
					SliderValueFrame.Name = "SliderValueFrame"
					SliderValueFrame.Parent = TextFrameColor
					SliderValueFrame.AnchorPoint = Vector2.new(0.5, 0.5)
					SliderValueFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
					SliderValueFrame.BorderSizePixel = 0
					SliderValueFrame.Position = UDim2.new(0.50109309, 0, 3, 0)
					SliderValueFrame.Size = UDim2.new(0, 210, 0, 5)

					SliderValueFrame_2.Name = "SliderValueFrame"
					SliderValueFrame_2.Parent = SliderValueFrame
					SliderValueFrame_2.BackgroundColor3 = ColorUI
					SliderValueFrame_2.BorderSizePixel = 0
					SliderValueFrame_2.Size = UDim2.new((0.2) / 1, 0, 0, 5)

					SliderValueFrame_3.Name = "SliderValueFrame"
					SliderValueFrame_3.Parent = SliderValueFrame
					SliderValueFrame_3.AnchorPoint = Vector2.new(0.5, 0.5)
					SliderValueFrame_3.BackgroundColor3 = Color3.fromRGB(64, 75, 175)
					SliderValueFrame_3.BorderSizePixel = 0
					SliderValueFrame_3.ClipsDescendants = true
					SliderValueFrame_3.Position = UDim2.new((0.2)/1, 0.5, 0.45,0.5, 0)
					
					local function move(input)
						local pos =
							UDim2.new(
								math.clamp((input.Position.X - SliderValueFrame.AbsolutePosition.X) / SliderValueFrame.AbsoluteSize.X, 0, 1),
								0,
								0.45,
								0
							)
						local pos1 =
							UDim2.new(
								math.clamp((input.Position.X - SliderValueFrame.AbsolutePosition.X) / SliderValueFrame.AbsoluteSize.X, 0, 1),
								0,
								0,
								5
							)
						SliderValueFrame_2:TweenSize(pos1, "Out", "Sine", 0.2, true)
						SliderValueFrame_3:TweenPosition(pos, "Out", "Sine", 0.2, true)
						local value = string.format("%.1f",((pos.X.Scale * 1) / 1) * (1 - 0) + 0)
						TextTransparency.Text = value
						Hue.BackgroundTransparency = TextTransparency.Text
					end

					local dragging = false


					SliderValueFrame.InputBegan:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = true

							end
						end
					)
					SliderValueFrame.InputEnded:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = false

							end
						end
					)
					game:GetService("UserInputService").InputChanged:Connect(function(input)
						if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
							move(input)
						end
					end)
					
					OMF.MouseButton1Down:Connect(
						function()
							RainbowColorPicker = not RainbowColorPicker

							if ColorInput then
								ColorInput:Disconnect()
							end

							if HueInput then
								HueInput:Disconnect()
							end

							if RainbowColorPicker then


								OldToggleColor = BoxColor.BackgroundColor3
								OldToggleColor2 = TextButton_2_Toggle.ImageColor3
								OldColor = Color.BackgroundColor3
								OldColorSelectionPosition = ColorSelection.Position
								OldHueSelectionPosition = HueSelection.Position

								while RainbowColorPicker do
									BoxColor.BackgroundColor3 = Color3.fromHSV(Red.RainbowColorValue, 1, 1)
									Color.BackgroundColor3 = Color3.fromHSV(Red.RainbowColorValue, 1, 1)
									TextButton_2_Toggle.ImageColor3 = Color3.fromHSV(Red.RainbowColorValue, 1, 1)
									TextRGB.Text = "RGB: " .. math.round(BoxColor.BackgroundColor3.R* 255) .. "," .. math.round(BoxColor.BackgroundColor3.G * 255) .. "," .. math.round(BoxColor.BackgroundColor3.B * 255)

									ColorSelection.Position = UDim2.new(0, 2, 0, 0)
									HueSelection.Position = UDim2.new(0,  Red.HueSelectionPosition, 0.5,0)

									pcall(callback, BoxColor.BackgroundColor3)
									wait()
								end
							elseif not RainbowColorPicker then

								BoxColor.BackgroundColor3 = OldToggleColor
								Color.BackgroundColor3 = OldColor
								TextButton_2_Toggle.ImageColor3 = OldToggleColor2
								TextRGB.Text = "R G B"

								ColorSelection.Position = OldColorSelectionPosition
								HueSelection.Position = OldHueSelectionPosition

								pcall(callback, BoxColor.BackgroundColor3)
							end
						end
					)
					
					local function UpdateColorPicker(nope)
						TextButton_2_Toggle.ImageColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
						BoxColor.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
						Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)
						TextRGB.Text = "RGB: " .. math.round(BoxColor.BackgroundColor3.R* 255) .. "," .. math.round(BoxColor.BackgroundColor3.G * 255) .. "," .. math.round(BoxColor.BackgroundColor3.B * 255)

						pcall(callback, BoxColor.BackgroundColor3)
					end
					ColorH =
						1 -
						(math.clamp(HueSelection.AbsolutePosition.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) /
							Hue.AbsoluteSize.Y)
					ColorS =
						(math.clamp(ColorSelection.AbsolutePosition.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) /
							Color.AbsoluteSize.X)
					ColorV =
						1 -
						(math.clamp(ColorSelection.AbsolutePosition.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) /
							Color.AbsoluteSize.Y)

					BoxColor.BackgroundColor3 = preset
					Color.BackgroundColor3 = preset
					pcall(callback, BoxColor.BackgroundColor3)

					local RainbowColorPicker = false

					Color.InputBegan:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								if RainbowColorPicker then
									return
								end

								if ColorInput then
									ColorInput:Disconnect()
								end

								ColorInput =
									RunService.RenderStepped:Connect(
										function()
											local ColorX =
											(math.clamp(Mouse.X - Color.AbsolutePosition.X, 0, Color.AbsoluteSize.X) /
												Color.AbsoluteSize.X)
											local ColorY =
											(math.clamp(Mouse.Y - Color.AbsolutePosition.Y, 0, Color.AbsoluteSize.Y) /
												Color.AbsoluteSize.Y)

											ColorSelection.Position = UDim2.new(ColorX, 0, ColorY, 0)
											ColorS = ColorX
											ColorV = 1 - ColorY

											UpdateColorPicker(true)
										end
									)
							end
						end
					)


					Color.InputEnded:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								if ColorInput then
									ColorInput:Disconnect()
								end
							end
						end
					)

					Hue.InputBegan:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								if RainbowColorPicker then
									return
								end

								if HueInput then
									HueInput:Disconnect()
								end

								HueInput =
									RunService.RenderStepped:Connect(
										function()
											local HueY = (math.clamp(Mouse.Y - Hue.AbsolutePosition.Y, 0, Hue.AbsoluteSize.Y) /Hue.AbsoluteSize.Y)
											local HueX = (math.clamp(Mouse.X- Hue.AbsolutePosition.X, 0, Hue.AbsoluteSize.X) / Hue.AbsoluteSize.X)

											HueSelection.Position = UDim2.new(HueX, 0, HueY, 0)
											ColorH = 1 - HueY

											UpdateColorPicker(true)
										end
									)
							end
						end
					)

					Hue.InputEnded:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								if HueInput then
									HueInput:Disconnect()
								end
							end
						end
					)
					
					Pixker.MouseEnter:Connect(function()
						TweenService:Create(
							TextReal,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0}
						):Play()
						TweenService:Create(
							TextButton_3_Toggle2,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0}
						):Play()
						TweenService:Create(
							TextTransparency,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0}
						):Play()
						TweenService:Create(
							TextRGB,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0}
						):Play()
					end)
					Pixker.MouseLeave:Connect(function()
						TweenService:Create(
							TextReal,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0.45}
						):Play()
						TweenService:Create(
							TextButton_3_Toggle2,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0.45}
						):Play()
						TweenService:Create(
							TextTransparency,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0.45}
						):Play()
						TweenService:Create(
							TextRGB,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0.45}
						):Play()
					end)
					
					local sk = false
					TextButton_Dropdown.MouseButton1Click:Connect(function()
						if sk == false then
							TweenService:Create(
								Pixker,
								TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Size = UDim2.new(0, 240, 0, 220)}
							):Play()
						else
							TweenService:Create(
								Pixker,
								TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Size = UDim2.new(0, 240, 0, 34)}
							):Play()
						end
						sk = not sk
					end
					)
				end
				
				function LibraryFunction.JoinDiscord(options)
					
					local Title = options.Title or "Join Discord"
					local LogoUI = options.Logo or 11107231085
					local ColorUI = options.ColorUI or _G.Settings.ColorUI
					
					local DiscordFrame = Instance.new("Frame")
					local Button = Instance.new("TextButton")
					local DiscordUICorner = Instance.new("UICorner")
					local DiscordText = Instance.new("TextLabel")
					local Logo = Instance.new("ImageLabel")
					local JoinDIscord = Instance.new("TextButton")
					local UICorner = Instance.new("UICorner")

					DiscordFrame.Name = "DiscordFrame"
					DiscordFrame.Parent = PageFrame
					DiscordFrame.Active = true
					DiscordFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					DiscordFrame.BackgroundTransparency = 1.000
					DiscordFrame.Position = UDim2.new(0, 0, 2.79999995, 0)
					DiscordFrame.Size = UDim2.new(0, 240, 0, 90)

					Button.Name = "Button"
					Button.Parent = DiscordFrame
					Button.AnchorPoint = Vector2.new(0.5, 0.5)
					Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
					Button.BackgroundTransparency = 0.500
					Button.Position = UDim2.new(0.5, 0, 0.5, 0)
					Button.Size = UDim2.new(0, 240, 0, 83)
					Button.AutoButtonColor = false
					Button.Font = Enum.Font.GothamMedium
					Button.TextColor3 = Color3.fromRGB(255, 255, 255)
					Button.TextSize = 14.000
					Button.TextTransparency = 1.000
					Button.TextWrapped = true

					DiscordUICorner.CornerRadius = UDim.new(0, 4)
					DiscordUICorner.Name = "DiscordUICorner"
					DiscordUICorner.Parent = Button

					DiscordText.Name = "DiscordText"
					DiscordText.Parent = Button
					DiscordText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					DiscordText.BackgroundTransparency = 1.000
					DiscordText.Position = UDim2.new(0.0298508294, 0, 0, 0)
					DiscordText.Size = UDim2.new(0, 232, 0, 34)
					DiscordText.Font = Enum.Font.GothamMedium
					DiscordText.TextColor3 = Color3.fromRGB(255, 255, 255)
					DiscordText.TextSize = 14.000
					DiscordText.TextTransparency = 0.650
					DiscordText.TextWrapped = true
					DiscordText.Text = Title
					DiscordText.TextXAlignment = Enum.TextXAlignment.Left

					Logo.Name = "Logo"
					Logo.Parent = Button
					Logo.Active = true
					Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Logo.BackgroundTransparency = 1.000
					Logo.Position = UDim2.new(0.0298508294, 0, 0.371325403, 0)
					Logo.Size = UDim2.new(0, 42, 0, 39)
					Logo.Image = "http://www.roblox.com/asset/?id="..tostring(LogoUI) --10626897521

					JoinDIscord.Name = "JoinDIscord"
					JoinDIscord.Parent = Button
					JoinDIscord.BackgroundColor3 = ColorUI
					JoinDIscord.BackgroundTransparency = 0.450
					JoinDIscord.BorderSizePixel = 0
					JoinDIscord.Position = UDim2.new(0.25999999, 0, 0.614457846, 0)
					JoinDIscord.Size = UDim2.new(0, 166, 0, 24)
					JoinDIscord.Font = Enum.Font.GothamMedium
					JoinDIscord.TextColor3 = Color3.fromRGB(255, 255, 255)
					JoinDIscord.TextSize = 12.000
					JoinDIscord.TextTransparency = 0.450
					JoinDIscord.ClipsDescendants = true
					JoinDIscord.AutoButtonColor = false

					UICorner.CornerRadius = UDim.new(0, 4)
					UICorner.Parent = JoinDIscord
					
					Button.MouseEnter:Connect(function()
						TweenService:Create(
							JoinDIscord,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundTransparency = 0}
						):Play()
						TweenService:Create(
							JoinDIscord,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0}
						):Play()
						
						TweenService:Create(
							DiscordText,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0}
						):Play()
					end)
					Button.MouseLeave:Connect(function()
						TweenService:Create(
							JoinDIscord,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundTransparency = 0.45}
						):Play()
						TweenService:Create(
							JoinDIscord,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0.45}
						):Play()
						
						TweenService:Create(
							DiscordText,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0.45}
						):Play()
					end)
					
					JoinDIscord.MouseEnter:Connect(function()
						TweenService:Create(
							JoinDIscord,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundTransparency = 0}
						):Play()
						TweenService:Create(
							JoinDIscord,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0}
						):Play()
					end)
					JoinDIscord.MouseLeave:Connect(function()
						TweenService:Create(
							JoinDIscord,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundTransparency = 0.45}
						):Play()
						TweenService:Create(
							JoinDIscord,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0.45}
						):Play()
					end)
					
					JoinDIscord.MouseButton1Down:Connect(function()
						CircleAnim(JoinDIscord,Color3.fromRGB(255,255,255),Color3.fromRGB(255,255,255))
						JoinDIscord.TextSize = 0
						TweenService:Create(
							JoinDIscord,
							TweenInfo.new(0.15, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
							{TextSize = 14}
						):Play()
						TweenService:Create(
							JoinDIscord,
							TweenInfo.new(0.15, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
							{Size = UDim2.new(0, 156, 0, 23)}
						):Play()
						repeat wait() until JoinDIscord.Size == UDim2.new(0, 156, 0, 23)
						TweenService:Create(
							JoinDIscord,
							TweenInfo.new(0.15, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
							{Size = UDim2.new(0, 166, 0, 24)}
						):Play()
					end)
				end

				function LibraryFunction.Button(options)
					
					local Title = options.Title or "ww's Button"
					local callback = options.callback or function() end
					local ColorUI = options.ColorUI or _G.Settings.Color
					
					local ButtonFrame = Instance.new("Frame")
					local Button = Instance.new("TextButton")
					local ButtonUICorner = Instance.new("UICorner")

					ButtonFrame.Name = "ButtonFrame"
					ButtonFrame.Parent = PageFrame
					ButtonFrame.Active = true
					ButtonFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					ButtonFrame.BackgroundTransparency = 1.000
					ButtonFrame.Size = UDim2.new(0, 240, 0, 34)

					Button.Name = "Button"
					Button.Parent = ButtonFrame
					Button.AnchorPoint = Vector2.new(0.5, 0.5)
					Button.BackgroundColor3 = ColorUI
					Button.BackgroundTransparency = 0.500
					Button.Position = UDim2.new(0.5, 0, 0.5, 0)
					Button.Size = UDim2.new(0, 240, 0, 34)
					Button.Font = Enum.Font.GothamMedium
					Button.TextColor3 = Color3.fromRGB(255, 255, 255)
					Button.TextSize = 14.000
					Button.TextTransparency = 0.650
					Button.TextWrapped = true
					Button.AutoButtonColor = false
					Button.Text = tostring(Title)
					Button.ClipsDescendants = true

					ButtonUICorner.CornerRadius = UDim.new(0, 4)
					ButtonUICorner.Name = "ButtonUICorner"
					ButtonUICorner.Parent = Button

					Button.MouseEnter:Connect(function()
						TweenService:Create(
							Button,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundTransparency = 0}
						):Play()
						TweenService:Create(
							Button,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0}
						):Play()
						TweenService:Create(
							Button,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{Size = UDim2.new(0, 250, 0, 34)}
						):Play()
					end)

					Button.MouseLeave:Connect(function()
						TweenService:Create(
							Button,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundTransparency = 0.5}
						):Play()
						TweenService:Create(
							Button,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0.65}
						):Play()
						TweenService:Create(
							Button,
							TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{Size = UDim2.new(0, 240, 0, 34)}
						):Play()
					end)

					Button.MouseButton1Down:Connect(function()
						CircleAnim(Button,Color3.fromRGB(255,255,255),Color3.fromRGB(255,255,255))
						Button.TextSize = 0
						TweenService:Create(
							Button,
							TweenInfo.new(0.15, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
							{Size = UDim2.new(0, 250, 0, 25)}
						):Play()
						TweenService:Create(
							Button,
							TweenInfo.new(0.15, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
							{TextSize = 14}
						):Play()
						repeat wait() until Button.Size == UDim2.new(0, 250, 0, 25)
						TweenService:Create(
							Button,
							TweenInfo.new(0.15, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
							{Size = UDim2.new(0, 240, 0, 34)}
						):Play()
						pcall(callback)
					end)
				end

				function LibraryFunction.Toggle(options)
					
					local Title = options.Title or "ww's Toggle"
					local Default = options.Default or false
					local callback = options.callback or function() end
					local ColorUI = options.ColorUI or _G.Settings.ColorUI
					
					
					local ToggleFrame = Instance.new("Frame")
					local ToggleButton = Instance.new("TextButton")
					local Toggle = Instance.new("ImageButton")
					local ToggleUICorner = Instance.new("UICorner")
					local ToggleInner = Instance.new("ImageButton")
					local UICorner = Instance.new("UICorner")
					local ToggleLabel = Instance.new("TextLabel")

					ToggleFrame.Name = "ToggleFrame"
					ToggleFrame.Parent = PageFrame
					ToggleFrame.Active = true
					ToggleFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					ToggleFrame.BackgroundTransparency = 1.000
					ToggleFrame.Size = UDim2.new(0, 240, 0, 34)

					ToggleButton.Name = "ToggleButton"
					ToggleButton.Parent = ToggleFrame
					ToggleButton.AnchorPoint = Vector2.new(0.5, 0.5)
					ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 127)
					ToggleButton.BackgroundTransparency = 1.000
					ToggleButton.Position = UDim2.new(0.5, 0, 0.5, 0)
					ToggleButton.Size = UDim2.new(0, 240, 0, 34)
					ToggleButton.Font = Enum.Font.GothamMedium
					ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
					ToggleButton.TextSize = 14.000
					ToggleButton.TextTransparency = 1.000
					ToggleButton.TextWrapped = true

					Toggle.Name = "Toggle"
					Toggle.Parent = ToggleButton
					Toggle.AnchorPoint = Vector2.new(0.5, 0.5)
					Toggle.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
					Toggle.Position = UDim2.new(0.099999994, 0, 0.5, 0)
					Toggle.Size = UDim2.new(0, 27, 0, 27)
					Toggle.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
					Toggle.ImageTransparency = 1.000
					Toggle.AutoButtonColor = false

					ToggleUICorner.CornerRadius = UDim.new(0, 5)
					ToggleUICorner.Name = "ToggleUICorner"
					ToggleUICorner.Parent = Toggle

					ToggleInner.Name = "ToggleInner"
					ToggleInner.Parent = Toggle
					ToggleInner.AnchorPoint = Vector2.new(0.5, 0.5)
					ToggleInner.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
					ToggleInner.BackgroundTransparency = 1.000
					ToggleInner.Position = UDim2.new(0.5, 0, 0.5, 0)
					ToggleInner.Size = UDim2.new(0, 0, 0, 0)
					ToggleInner.Image = "http://www.roblox.com/asset/?id=6031068421"
					ToggleInner.ImageColor3 = ColorUI
					ToggleInner.AutoButtonColor = false

					UICorner.CornerRadius = UDim.new(0, 5)
					UICorner.Parent = ToggleInner

					ToggleLabel.Name = "ToggleLabel"
					ToggleLabel.Parent = ToggleButton
					ToggleLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					ToggleLabel.BackgroundTransparency = 1.000
					ToggleLabel.Position = UDim2.new(0.18, 0, 0, 0)
					ToggleLabel.Size = UDim2.new(0, 250, 0, 34)
					ToggleLabel.Font = Enum.Font.GothamMedium
					ToggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
					ToggleLabel.TextSize = 14.000
					ToggleLabel.Text = tostring(Title)
					ToggleLabel.TextTransparency = 0.650
					ToggleLabel.TextWrapped = true
					ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left

					local ToggleFocus = false

					ToggleButton.MouseEnter:Connect(function()
						if ToggleFocus == false then
							TweenService:Create(
								ToggleLabel,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0}
							):Play()
						end
					end)

					ToggleButton.MouseLeave:Connect(function()
						if ToggleFocus == false then
							TweenService:Create(
								ToggleLabel,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0.65}
							):Play()
						end
					end)

					ToggleInner.MouseButton1Down:Connect(function()
						if ToggleFocus == false then
							TweenService:Create(
								ToggleLabel,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0}
							):Play()
							TweenService:Create(
								ToggleInner,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Size = UDim2.new(0, 27, 0, 27)}
							):Play()
						else
							TweenService:Create(
								ToggleLabel,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0.65}
							):Play()
							TweenService:Create(
								ToggleInner,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Size = UDim2.new(0, 0, 0, 0)}
							):Play()
						end
						ToggleFocus = not ToggleFocus
						options.callback(ToggleFocus)
					end)

					Toggle.MouseButton1Down:Connect(function()
						if ToggleFocus == false then
							TweenService:Create(
								ToggleLabel,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0}
							):Play()
							TweenService:Create(
								ToggleInner,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Size = UDim2.new(0, 27, 0, 27)}
							):Play()
						else
							TweenService:Create(
								ToggleLabel,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0.65}
							):Play()
							TweenService:Create(
								ToggleInner,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Size = UDim2.new(0, 0, 0, 0)}
							):Play()
						end
						ToggleFocus = not ToggleFocus
						options.callback(ToggleFocus)
					end)

					ToggleButton.MouseButton1Down:Connect(function()
						if ToggleFocus == false then
							TweenService:Create(
								ToggleLabel,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0}
							):Play()
							TweenService:Create(
								ToggleInner,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Size = UDim2.new(0, 27, 0, 27)}
							):Play()
						else
							TweenService:Create(
								ToggleLabel,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0.65}
							):Play()
							TweenService:Create(
								ToggleInner,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Size = UDim2.new(0, 0, 0, 0)}
							):Play()
						end
						ToggleFocus = not ToggleFocus
						options.callback(ToggleFocus)
					end)

					if Default == true then
						TweenService:Create(
							ToggleLabel,
							TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0}
						):Play()
						TweenService:Create(
							ToggleInner,
							TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{Size = UDim2.new(0, 27, 0, 27)}
						):Play()
						ToggleFocus = not ToggleFocus
						options.callback(ToggleFocus)
					end
				end

				function LibraryFunction.Line(options)
					
					local ColorUI = options.ColorUI or _G.Settings.ColorUI
					
					local LineFrame = Instance.new("Frame")
					local Line = Instance.new("Frame")

					LineFrame.Name = "LineFrame"
					LineFrame.Parent = PageFrame
					LineFrame.Active = true
					LineFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					LineFrame.BackgroundTransparency = 1.000
					LineFrame.Size = UDim2.new(0, 240, 0, 10)

					Line.Name = "Line"
					Line.Parent = LineFrame
					Line.Active = true
					Line.AnchorPoint = Vector2.new(0.5, 0.5)
					Line.BackgroundColor3 = ColorUI
					Line.BackgroundTransparency = 0.800
					Line.Position = UDim2.new(0.5, 0, 0.5, 0)
					Line.Size = UDim2.new(0, 240, 0, 1)
					
					local LineRefresh = {}
					
					function LineRefresh.Color(value)
						TweenService:Create(
							Line,
							TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 = value}
						):Play()
					end
				end
				
				function LibraryFunction.MultiDropdown(options)

					local Item = options.Item or {}
					local Title = options.Title or "ww's MultiDropdown"
					local Default = options.Default or {}
					local MultiDropdown = {}
					local callback = options.callback or function() end
					local ColorUI = options.ColorUI or _G.Settings.Color


					local DropdownFrame = Instance.new("Frame")
					local Button = Instance.new("TextButton")
					local ButtonUICorner = Instance.new("UICorner")
					local Arrow = Instance.new("ImageLabel")
					local ArrowUICorner = Instance.new("UICorner")
					local DropdownText = Instance.new("TextLabel")

					DropdownFrame.Name = "DropdownFrame"
					DropdownFrame.Parent = PageFrame
					DropdownFrame.Active = true
					DropdownFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					DropdownFrame.BackgroundTransparency = 1.000
					DropdownFrame.Size = UDim2.new(0, 240, 0, 34)

					Button.Name = "Button"
					Button.Parent = DropdownFrame
					Button.AnchorPoint = Vector2.new(0.5, 0.5)
					Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
					Button.BackgroundTransparency = 0.500
					Button.Position = UDim2.new(0.5, 0, 0.5, 0)
					Button.Size = UDim2.new(0, 240, 0, 34)
					Button.AutoButtonColor = false
					Button.Font = Enum.Font.GothamMedium
					Button.TextColor3 = Color3.fromRGB(255, 255, 255)
					Button.TextSize = 14.000
					Button.TextTransparency = 1.000
					Button.TextWrapped = true

					ButtonUICorner.CornerRadius = UDim.new(0, 4)
					ButtonUICorner.Name = "ButtonUICorner"
					ButtonUICorner.Parent = Button

					Arrow.Name = "Arrow"
					Arrow.Parent = Button
					Arrow.AnchorPoint = Vector2.new(0.5, 0.5)
					Arrow.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
					Arrow.BackgroundTransparency = 1
					Arrow.ImageTransparency = 0.45
					Arrow.Position = UDim2.new(0.943880618, 0, 0.5, 0)
					Arrow.Rotation = 180
					Arrow.Size = UDim2.new(0, 23, 0, 23)
					Arrow.Image = "http://www.roblox.com/asset/?id=6031094687"

					ArrowUICorner.CornerRadius = UDim.new(0, 4)
					ArrowUICorner.Name = "ArrowUICorner"
					ArrowUICorner.Parent = Arrow

					DropdownText.Name = "DropdownText"
					DropdownText.Parent = Button
					DropdownText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					DropdownText.BackgroundTransparency = 1.000
					DropdownText.Position = UDim2.new(0.0298507456, 0, 0, 0)
					DropdownText.Size = UDim2.new(0, 240, 0, 34)
					DropdownText.Font = Enum.Font.GothamMedium
					DropdownText.TextColor3 = Color3.fromRGB(255, 255, 255)
					DropdownText.TextSize = 14.000
					DropdownText.TextTransparency = 0.650
					DropdownText.TextWrapped = true
					DropdownText.TextXAlignment = Enum.TextXAlignment.Left
					DropdownText.Text = tostring(Title .. ": nil")

					local SelectionFrame = Instance.new("Frame")
					local SelectionFrameUIListLayout = Instance.new("UIListLayout")
					local SelectionFrameUIPadding = Instance.new("UIPadding")
					local SelectionFrameUICorner = Instance.new("UICorner")

					SelectionFrame.Name = "SelectionFrame"
					SelectionFrame.Parent = PageFrame
					SelectionFrame.Active = true
					SelectionFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
					SelectionFrame.BackgroundTransparency = 0.500
					SelectionFrame.BorderSizePixel = 0
					SelectionFrame.ClipsDescendants = true
					SelectionFrame.Position = UDim2.new(0, 0, 1.44210529, 0)
					SelectionFrame.Size = UDim2.new(0, 240, 0, 0)

					local SelectionScrolling = Instance.new("ScrollingFrame")

					SelectionScrolling.Name = "SelectionScrolling"
					SelectionScrolling.Parent = SelectionFrame
					SelectionScrolling.Active = true
					SelectionScrolling.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					SelectionScrolling.BackgroundTransparency = 1
					SelectionScrolling.BorderSizePixel = 0
					SelectionScrolling.Position = UDim2.new(0, 0, 0, 0)
					SelectionScrolling.Size = UDim2.new(0, 240, 0, 160)
					SelectionScrolling.BottomImage = ""
					SelectionScrolling.ScrollBarThickness = 2
					SelectionScrolling.TopImage = ""

					SelectionFrameUIListLayout.Name = "SelectionFrameUIListLayout"
					SelectionFrameUIListLayout.Parent = SelectionScrolling
					SelectionFrameUIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
					SelectionFrameUIListLayout.Padding = UDim.new(0, 5)

					SelectionFrameUIPadding.Name = "SelectionFrameUIPadding"
					SelectionFrameUIPadding.Parent = SelectionScrolling
					SelectionFrameUIPadding.PaddingLeft = UDim.new(0, 5)
					SelectionFrameUIPadding.PaddingTop = UDim.new(0, 5)

					SelectionFrameUICorner.CornerRadius = UDim.new(0, 4)
					SelectionFrameUICorner.Name = "SelectionFrameUICorner"
					SelectionFrameUICorner.Parent = SelectionFrame

					local SearchBar = Instance.new("TextBox")
					local SearchBarUICorner = Instance.new("UICorner")

					SearchBar.Name = "SearchBar"
					SearchBar.Parent = SelectionScrolling
					SearchBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
					SearchBar.BorderSizePixel = 0
					SearchBar.Size = UDim2.new(0, 230, 0, 22)
					SearchBar.Font = Enum.Font.Gotham
					SearchBar.PlaceholderText = "Search . . ."
					SearchBar.ClipsDescendants = true
					SearchBar.Text = ""
					SearchBar.TextColor3 = Color3.fromRGB(255, 255, 255)
					SearchBar.TextSize = 12.000

					SearchBarUICorner.CornerRadius = UDim.new(0, 4)
					SearchBarUICorner.Name = "SearchBarUICorner"
					SearchBarUICorner.Parent = SearchBar

					function UpdateInputOfSearchText()
						local InputText = string.upper(SearchBar.Text)
						for _,button in pairs(SelectionScrolling:GetChildren())do
							if button:IsA("Frame") then
								for i,v in pairs(button:GetChildren()) do
									if v:IsA("TextButton") then
										if InputText == "" or string.find(string.upper(v.Text),InputText) ~= nil then
											button.Visible = true
										else
											button.Visible = false
										end
									end
								end
							end
						end
					end

					SearchBar.Changed:Connect(UpdateInputOfSearchText)

					local DropdownFocus = false

					DropdownFrame.MouseEnter:Connect(function()
						if DropdownFocus == false then
							TweenService:Create(
								DropdownText,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{ImageTransparency = 0}
							):Play()
						end
					end)

					DropdownFrame.MouseLeave:Connect(function()
						if DropdownFocus == false then
							TweenService:Create(
								DropdownText,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0.65}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{ImageTransparency = 0.65}
							):Play()
						end
					end)

					for i,v in pairs(Item) do
						local ListFrame = Instance.new("Frame")
						local TextButton = Instance.new("TextButton")

						ListFrame.Name = "ListFrame"
						ListFrame.Parent = SelectionScrolling
						ListFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
						ListFrame.BackgroundTransparency = 1.000
						ListFrame.Size = UDim2.new(0, 240, 0, 22)

						TextButton.Parent = ListFrame
						TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
						TextButton.BackgroundTransparency = 1.000
						TextButton.Size = UDim2.new(0, 240, 0, 22)
						TextButton.Font = Enum.Font.GothamMedium
						TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
						TextButton.TextSize = 12.000
						TextButton.Text = tostring(v)
						TextButton.TextTransparency = 0.500
						
						local Logo = Instance.new("ImageLabel")

						Logo.Name = "Logo"
						Logo.Parent = ListFrame
						Logo.Active = true
						Logo.AnchorPoint = Vector2.new(0.5, 0.5)
						Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
						Logo.BackgroundTransparency = 1.000
						Logo.BorderColor3 = Color3.fromRGB(27, 42, 53)
						Logo.Position = UDim2.new(0.0500000007, 0, 0.5, 0)
						Logo.ImageColor3 = ColorUI
						Logo.Size = UDim2.new(0, 0, 0, 0)
						Logo.Image = "http://www.roblox.com/asset/?id=6031251532"
						
						for o,p in pairs(Default) do
							if v == p  then
								table.insert(MultiDropdown,p)
								TweenService:Create(
									Logo,
									TweenInfo.new(0.15, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
									{Size = UDim2.new(0, 20, 0, 20)}
								):Play()
								TweenService:Create(
									TextButton,
									TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{TextColor3 = ColorUI}
								):Play()
								TweenService:Create(
									TextButton,
									TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{TextTransparency = 0}
								):Play()
								TweenService:Create(
									SelectionFrame,
									TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{Size = UDim2.new(0, 240, 0, 0)}
								):Play()
								TweenService:Create(
									Arrow,
									TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{Rotation = 180}
								):Play()
								TweenService:Create(
									Arrow,
									TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{ImageTransparency = 0.45}
								):Play()
								DropdownText.Text = tostring(Title.." : "..table.concat(MultiDropdown,","))
								pcall(options.callback,MultiDropdown)
							end
						end
						
						TextButton.MouseEnter:Connect(function()
							TweenService:Create(
								TextButton,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0}
							):Play()
						end)

						TextButton.MouseLeave:Connect(function()
							TweenService:Create(
								TextButton,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0.5}
							):Play()
						end)

						TextButton.MouseButton1Down:Connect(function()
							if tablefound(MultiDropdown,v) == false then
								table.insert(MultiDropdown,v)
								TweenService:Create(
									TextButton,
									TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{TextColor3 = ColorUI}
								):Play()
								TweenService:Create(
									Logo,
									TweenInfo.new(0.15, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
									{Size = UDim2.new(0, 20, 0, 20)}
								):Play()
								TweenService:Create(
									TextButton,
									TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{TextTransparency = 0}
								):Play()
							else
								for ine,va in pairs(MultiDropdown) do
									if va == v then
										table.remove(MultiDropdown,ine)
									end
								end
								TweenService:Create(
									Logo,
									TweenInfo.new(0.15, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
									{Size = UDim2.new(0, 0, 0, 0)}
								):Play()
								TweenService:Create(
									TextButton,
									TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{TextColor3 = Color3.fromRGB(255, 255, 255)}
								):Play()
								TweenService:Create(
									TextButton,
									TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{TextTransparency = 0.5}
								):Play()
								TweenService:Create(
									Arrow,
									TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{Rotation = 180}
								):Play()
								TweenService:Create(
									Arrow,
									TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{ImageTransparency = 0.45}
								):Play()
							end
							DropdownText.Text = tostring(Title.." : "..table.concat(MultiDropdown,","))
							DropdownText.TextTransparency = 0.65
							pcall(options.callback,MultiDropdown)
							DropdownFocus = not DropdownFocus
						end)
					end


					Button.MouseButton1Down:Connect(function()
						if DropdownFocus == false then
							TweenService:Create(
								SelectionFrame,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Size = UDim2.new(0, 240, 0,160)}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Rotation = 0}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{ImageTransparency = 0}
							):Play()
						else
							TweenService:Create(
								SelectionFrame,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Size = UDim2.new(0, 240, 0, 0)}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Rotation = 180}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{ImageTransparency = 0.45}
							):Play()
						end
						SelectionScrolling.CanvasSize = UDim2.new(0,0,0,SelectionFrameUIListLayout.AbsoluteContentSize.Y + 5)
						DropdownFocus = not DropdownFocus
					end)
				end
				
				function LibraryFunction.Dropdown(options)
					
					local Item = options.Item or {}
					local Title = options.Title or "ww's Dropdown"
					local Default = options.Default or "nil"
					local callback = options.callback or function() end
					local ColorUI = options.ColorUI or _G.Settings.Color
					
					
					local DropdownFrame = Instance.new("Frame")
					local Button = Instance.new("TextButton")
					local ButtonUICorner = Instance.new("UICorner")
					local Arrow = Instance.new("ImageLabel")
					local ArrowUICorner = Instance.new("UICorner")
					local DropdownText = Instance.new("TextLabel")

					DropdownFrame.Name = "DropdownFrame"
					DropdownFrame.Parent = PageFrame
					DropdownFrame.Active = true
					DropdownFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					DropdownFrame.BackgroundTransparency = 1.000
					DropdownFrame.Size = UDim2.new(0, 240, 0, 34)

					Button.Name = "Button"
					Button.Parent = DropdownFrame
					Button.AnchorPoint = Vector2.new(0.5, 0.5)
					Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
					Button.BackgroundTransparency = 0.500
					Button.Position = UDim2.new(0.5, 0, 0.5, 0)
					Button.Size = UDim2.new(0, 240, 0, 34)
					Button.AutoButtonColor = false
					Button.Font = Enum.Font.GothamMedium
					Button.TextColor3 = Color3.fromRGB(255, 255, 255)
					Button.TextSize = 14.000
					Button.TextTransparency = 1.000
					Button.TextWrapped = true

					ButtonUICorner.CornerRadius = UDim.new(0, 4)
					ButtonUICorner.Name = "ButtonUICorner"
					ButtonUICorner.Parent = Button

					Arrow.Name = "Arrow"
					Arrow.Parent = Button
					Arrow.AnchorPoint = Vector2.new(0.5, 0.5)
					Arrow.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
					Arrow.BackgroundTransparency = 1
					Arrow.ImageTransparency = 0.45
					Arrow.Position = UDim2.new(0.943880618, 0, 0.5, 0)
					Arrow.Rotation = 180
					Arrow.Size = UDim2.new(0, 23, 0, 23)
					Arrow.Image = "http://www.roblox.com/asset/?id=6031094687"

					ArrowUICorner.CornerRadius = UDim.new(0, 4)
					ArrowUICorner.Name = "ArrowUICorner"
					ArrowUICorner.Parent = Arrow

					DropdownText.Name = "DropdownText"
					DropdownText.Parent = Button
					DropdownText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					DropdownText.BackgroundTransparency = 1.000
					DropdownText.Position = UDim2.new(0.0298507456, 0, 0, 0)
					DropdownText.Size = UDim2.new(0, 240, 0, 34)
					DropdownText.Font = Enum.Font.GothamMedium
					DropdownText.TextColor3 = Color3.fromRGB(255, 255, 255)
					DropdownText.TextSize = 14.000
					DropdownText.TextTransparency = 0.650
					DropdownText.TextWrapped = true
					DropdownText.TextXAlignment = Enum.TextXAlignment.Left
					DropdownText.Text = tostring(Title .. ": "..Default.."")
					
					local SelectionFrame = Instance.new("Frame")
					local SelectionFrameUIListLayout = Instance.new("UIListLayout")
					local SelectionFrameUIPadding = Instance.new("UIPadding")
					local SelectionFrameUICorner = Instance.new("UICorner")

					SelectionFrame.Name = "SelectionFrame"
					SelectionFrame.Parent = PageFrame
					SelectionFrame.Active = true
					SelectionFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
					SelectionFrame.BackgroundTransparency = 0.500
					SelectionFrame.BorderSizePixel = 0
					SelectionFrame.ClipsDescendants = true
					SelectionFrame.Position = UDim2.new(0, 0, 1.44210529, 0)
					SelectionFrame.Size = UDim2.new(0, 240, 0, 0)
					
					local SelectionScrolling = Instance.new("ScrollingFrame")
					
					SelectionScrolling.Name = "SelectionScrolling"
					SelectionScrolling.Parent = SelectionFrame
					SelectionScrolling.Active = true
					SelectionScrolling.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					SelectionScrolling.BackgroundTransparency = 1
					SelectionScrolling.BorderSizePixel = 0
					SelectionScrolling.Position = UDim2.new(0, 0, 0, 0)
					SelectionScrolling.Size = UDim2.new(0, 240, 0, 160)
					SelectionScrolling.BottomImage = ""
					SelectionScrolling.ScrollBarThickness = 2
					SelectionScrolling.TopImage = ""
					
					SelectionFrameUIListLayout.Name = "SelectionFrameUIListLayout"
					SelectionFrameUIListLayout.Parent = SelectionScrolling
					SelectionFrameUIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
					SelectionFrameUIListLayout.Padding = UDim.new(0, 5)

					SelectionFrameUIPadding.Name = "SelectionFrameUIPadding"
					SelectionFrameUIPadding.Parent = SelectionScrolling
					SelectionFrameUIPadding.PaddingLeft = UDim.new(0, 5)
					SelectionFrameUIPadding.PaddingTop = UDim.new(0, 5)

					SelectionFrameUICorner.CornerRadius = UDim.new(0, 4)
					SelectionFrameUICorner.Name = "SelectionFrameUICorner"
					SelectionFrameUICorner.Parent = SelectionFrame

					local DropdownFocus = false
					
					DropdownFrame.MouseEnter:Connect(function()
						if DropdownFocus == false then
							TweenService:Create(
								DropdownText,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{ImageTransparency = 0}
							):Play()
						end
					end)

					DropdownFrame.MouseLeave:Connect(function()
						if DropdownFocus == false then
							TweenService:Create(
								DropdownText,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0.65}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{ImageTransparency = 0.65}
							):Play()
						end
					end)
					
					local SearchBar = Instance.new("TextBox")
					local SearchBarUICorner = Instance.new("UICorner")

					SearchBar.Name = "SearchBar"
					SearchBar.Parent = SelectionScrolling
					SearchBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
					SearchBar.BorderSizePixel = 0
					SearchBar.Size = UDim2.new(0, 230, 0, 22)
					SearchBar.Font = Enum.Font.Gotham
					SearchBar.PlaceholderText = "Search . . ."
					SearchBar.ClipsDescendants = true
					SearchBar.Text = ""
					SearchBar.TextColor3 = Color3.fromRGB(255, 255, 255)
					SearchBar.TextSize = 12.000

					SearchBarUICorner.CornerRadius = UDim.new(0, 4)
					SearchBarUICorner.Name = "SearchBarUICorner"
					SearchBarUICorner.Parent = SearchBar

					function UpdateInputOfSearchText()
						local InputText = string.upper(SearchBar.Text)
						for _,button in pairs(SelectionScrolling:GetChildren())do
							if button:IsA("Frame") then
								for i,v in pairs(button:GetChildren()) do
									if v:IsA("TextButton") then
										if InputText == "" or string.find(string.upper(v.Text),InputText) ~= nil then
											button.Visible = true
										else
											button.Visible = false
										end
									end
								end
							end
						end
					end

					SearchBar.Changed:Connect(UpdateInputOfSearchText)

					for i,v in pairs(Item) do
						local ListFrame = Instance.new("Frame")
						local TextButton = Instance.new("TextButton")

						ListFrame.Name = "ListFrame"
						ListFrame.Parent = SelectionScrolling
						ListFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
						ListFrame.BackgroundTransparency = 1.000
						ListFrame.Size = UDim2.new(0, 240, 0, 22)

						TextButton.Parent = ListFrame
						TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
						TextButton.BackgroundTransparency = 1.000
						TextButton.Size = UDim2.new(0, 240, 0, 22)
						TextButton.Font = Enum.Font.GothamMedium
						TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
						TextButton.TextSize = 12.000
						TextButton.Text = tostring(v)
						TextButton.TextTransparency = 0.500

						TextButton.MouseEnter:Connect(function()
							TweenService:Create(
								TextButton,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0}
							):Play()
						end)

						TextButton.MouseLeave:Connect(function()
							TweenService:Create(
								TextButton,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0.5}
							):Play()
						end)

						TextButton.MouseButton1Down:Connect(function()
							TweenService:Create(
								SelectionFrame,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Size = UDim2.new(0, 240, 0, 0)}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Rotation = 180}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{ImageTransparency = 0.45}
							):Play()
							DropdownText.Text = tostring(Title .. ": "..v)
							DropdownText.TextTransparency = 0.65
							options.callback(v)
							DropdownFocus = not DropdownFocus
						end)
					end


					Button.MouseButton1Down:Connect(function()
						if DropdownFocus == false then
							TweenService:Create(
								SelectionFrame,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Size = UDim2.new(0, 240, 0,160)}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Rotation = 0}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{ImageTransparency = 0}
							):Play()
						else
							TweenService:Create(
								SelectionFrame,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Size = UDim2.new(0, 240, 0, 0)}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Rotation = 180}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{ImageTransparency = 0.45}
							):Play()
						end
						SelectionScrolling.CanvasSize = UDim2.new(0,0,0,SelectionFrameUIListLayout.AbsoluteContentSize.Y + 5)
						DropdownFocus = not DropdownFocus
					end)

					local DropdownFunction = {}

					function DropdownFunction.Clear()
						TweenService:Create(
							SelectionFrame,
							TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{Size = UDim2.new(0, 240, 0, 0)}
						):Play()
						TweenService:Create(
							Arrow,
							TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{Rotation = 180}
						):Play()
						TweenService:Create(
							Arrow,
							TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{ImageTransparency = 0.45}
						):Play()
						DropdownFocus = not DropdownFocus
						DropdownText.Text = tostring(Title).. ": nil"
						for i, v in next, SelectionScrolling:GetChildren() do
							if v:IsA("Frame") then
								v:Destroy()
							end
						end
					end

					function DropdownFunction.Add(value)
						TweenService:Create(
							SelectionFrame,
							TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{Size = UDim2.new(0, 250, 0, 0)}
						):Play()
						local ListFrame = Instance.new("Frame")
						local TextButton = Instance.new("TextButton")

						ListFrame.Name = "ListFrame"
						ListFrame.Parent = SelectionScrolling
						ListFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
						ListFrame.BackgroundTransparency = 1.000
						ListFrame.Size = UDim2.new(0, 240, 0, 22)

						TextButton.Parent = ListFrame
						TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
						TextButton.BackgroundTransparency = 1.000
						TextButton.Size = UDim2.new(0, 240, 0, 22)
						TextButton.Font = Enum.Font.GothamMedium
						TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
						TextButton.TextSize = 12.000
						TextButton.Text = tostring(value)
						TextButton.TextTransparency = 0.500

						TextButton.MouseEnter:Connect(function()
							TweenService:Create(
								TextButton,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0}
							):Play()
						end)

						TextButton.MouseLeave:Connect(function()
							TweenService:Create(
								TextButton,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{TextTransparency = 0.5}
							):Play()
						end)

						TextButton.MouseButton1Down:Connect(function()
							DropdownText.TextTransparency = 0.65
							TweenService:Create(
								SelectionFrame,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Size = UDim2.new(0, 240, 0, 0)}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{Rotation = 180}
							):Play()
							TweenService:Create(
								Arrow,
								TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
								{ImageTransparency = 0.45}
							):Play()
							DropdownText.Text = tostring(Title .. ": "..value)
							options.callback(value)
							DropdownFocus = not DropdownFocus
						end)
						SelectionScrolling.CanvasSize = UDim2.new(0,0,0,SelectionFrameUIListLayout.AbsoluteContentSize.Y + 5)
					end
					
					return DropdownFunction
				end
				
				function LibraryFunction.Label(options)
					
					local Title = options.Title or "ww's Label"
					
					local LabelFrame = Instance.new("Frame")
					local Label = Instance.new("TextLabel")

					LabelFrame.Name = "LabelFrame"
					LabelFrame.Parent = PageFrame
					LabelFrame.Active = true
					LabelFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					LabelFrame.BackgroundTransparency = 1.000
					LabelFrame.Position = UDim2.new(0, 0, 2.66315794, 0)
					LabelFrame.Size = UDim2.new(0, 240, 0, 30)

					Label.Name = "Label"
					Label.Parent = LabelFrame
					Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Label.BackgroundTransparency = 1.000
					Label.Size = UDim2.new(0, 240, 0, 30)
					Label.Font = Enum.Font.GothamMedium
					Label.TextColor3 = Color3.fromRGB(255, 255, 255)
					Label.TextSize = 14.000
					Label.TextTransparency = 0.500
					Label.TextWrapped = true
					Label.Text = tostring(Title)
					
					local Refresh = {}
					
					function Refresh.Clear(v)
						Label.Text = tostring(v)
					end
					return Refresh
				end
				
				function LibraryFunction.Slider(options)
					
					local Title = options.Title or "ww's Slider"
					local min = options.Min or 0
					local max = options.Max or 100
					local default = options.Default or 50
					local callback = options.callback or function() end
					local ColorUI = options.ColorUI or _G.Settings.Color
					
					local sliderfunc = {}
					
					local SliderFrame = Instance.new("Frame")
					local SliderFrame2 = Instance.new("Frame")
					local SliderFrame2UICorner = Instance.new("UICorner")
					local CustomValueMain = Instance.new("Frame")
					local CustomValueMainUICorner = Instance.new("UICorner")
					local TextBox = Instance.new("TextBox")
					local UICorner = Instance.new("UICorner")
					local SliderValueFrame = Instance.new("Frame")
					local SliderValueFrame_2 = Instance.new("Frame")
					local SliderValueFrame_3 = Instance.new("Frame")
					local UICorner_2 = Instance.new("UICorner")
					local TextHead = Instance.new("TextLabel")
					local SliderFrameUICorner = Instance.new("UICorner")

					SliderFrame.Name = "SliderFrame"
					SliderFrame.Parent = PageFrame
					SliderFrame.BackgroundColor3 = Color3.fromRGB(45,45,45)
					SliderFrame.BackgroundTransparency = 0.5
					SliderFrame.BorderSizePixel = 0
					SliderFrame.ClipsDescendants = true
					SliderFrame.Position = UDim2.new(0, 0, 3.03157902, 0)
					SliderFrame.Size = UDim2.new(0, 240, 0, 42)

					SliderFrame2.Name = "SliderFrame2"
					SliderFrame2.Parent = SliderFrame
					SliderFrame2.AnchorPoint = Vector2.new(0.5, 0.5)
					SliderFrame2.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
					SliderFrame2.BackgroundTransparency = 1
					SliderFrame2.BorderSizePixel = 0
					SliderFrame2.ClipsDescendants = true
					SliderFrame2.Position = UDim2.new(0.500241399, 0, 0.5, 0)
					SliderFrame2.Size = UDim2.new(0, 240, 0, 42)

					SliderFrame2UICorner.CornerRadius = UDim.new(0, 4)
					SliderFrame2UICorner.Name = "SliderFrame2UICorner"
					SliderFrame2UICorner.Parent = SliderFrame2

					CustomValueMain.Name = "CustomValueMain"
					CustomValueMain.Parent = SliderFrame2
					CustomValueMain.AnchorPoint = Vector2.new(0.5, 0.5)
					CustomValueMain.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
					CustomValueMain.BorderSizePixel = 0
					CustomValueMain.ClipsDescendants = true
					CustomValueMain.Position = UDim2.new(0.845, 0, 0.350000292, 0)
					CustomValueMain.Size = UDim2.new(0, 67, 0, 20)

					CustomValueMainUICorner.CornerRadius = UDim.new(0, 4)
					CustomValueMainUICorner.Name = "CustomValueMainUICorner"
					CustomValueMainUICorner.Parent = CustomValueMain

					TextBox.Parent = CustomValueMain
					TextBox.AnchorPoint = Vector2.new(0.5, 0.5)
					TextBox.BackgroundColor3 = Color3.fromRGB(23, 23, 23)
					TextBox.BackgroundTransparency = 1.000
					TextBox.BorderSizePixel = 0
					TextBox.ClipsDescendants = true
					TextBox.Position = UDim2.new(0.5, 0, 0.5, 0)
					TextBox.Size = UDim2.new(0, 48, 0, 20)
					TextBox.Font = Enum.Font.GothamMedium
					TextBox.PlaceholderColor3 = Color3.fromRGB(222, 222, 222)
					TextBox.Text = tostring(default and math.floor( (default / max) * (max - min) + min) or 0)
					TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
					TextBox.TextSize = 12.000

					UICorner.CornerRadius = UDim.new(0, 4)
					UICorner.Name = ""
					UICorner.Parent = TextBox

					SliderValueFrame.Name = "SliderValueFrame"
					SliderValueFrame.Parent = SliderFrame2
					SliderValueFrame.AnchorPoint = Vector2.new(0.5, 0.5)
					SliderValueFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
					SliderValueFrame.BorderSizePixel = 0
					SliderValueFrame.Position = UDim2.new(0.50109309, 0, 0.770000637, 0)
					SliderValueFrame.Size = UDim2.new(0, 230, 0, 5)

					SliderValueFrame_2.Name = "SliderValueFrame"
					SliderValueFrame_2.Parent = SliderValueFrame
					SliderValueFrame_2.BackgroundColor3 = ColorUI
					SliderValueFrame_2.BorderSizePixel = 0
					SliderValueFrame_2.Size = UDim2.new((default or 0) / max, 0, 0, 5)

					SliderValueFrame_3.Name = "SliderValueFrame"
					SliderValueFrame_3.Parent = SliderValueFrame
					SliderValueFrame_3.AnchorPoint = Vector2.new(0.5, 0.5)
					SliderValueFrame_3.BackgroundColor3 = Color3.fromRGB(64, 75, 175)
					SliderValueFrame_3.BorderSizePixel = 0
					SliderValueFrame_3.ClipsDescendants = true
					SliderValueFrame_3.Position = UDim2.new((default or 0)/max, 0.5, 0.45,0.5, 0)

					UICorner_2.CornerRadius = UDim.new(0, 300)
					UICorner_2.Name = ""
					UICorner_2.Parent = SliderValueFrame_3

					TextHead.Name = "TextHead"
					TextHead.Parent = SliderFrame
					TextHead.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					TextHead.BackgroundTransparency = 1.000
					TextHead.Position = UDim2.new(0.0225903615, 0, 0, 0)
					TextHead.Size = UDim2.new(0, 240, 0, 29)
					TextHead.Font = Enum.Font.GothamMedium
					TextHead.TextColor3 = Color3.fromRGB(255, 255, 255)
					TextHead.TextSize = 14.000
					TextHead.TextTransparency = 0.650
					TextHead.Text = tostring(Title)
					TextHead.TextWrapped = true
					TextHead.TextXAlignment = Enum.TextXAlignment.Left
					
					SliderFrame.MouseEnter:Connect(function()
						TweenService:Create(
							TextHead,
							TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0}
						):Play()
					end)
					
					SliderFrame.MouseLeave:Connect(function()
						TweenService:Create(
							TextHead,
							TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0.65}
						):Play()
					end)

					SliderFrameUICorner.CornerRadius = UDim.new(0, 4)
					SliderFrameUICorner.Name = "SliderFrameUICorner"
					SliderFrameUICorner.Parent = SliderFrame
					
					local function move(input)
						local pos =
							UDim2.new(
								math.clamp((input.Position.X - SliderValueFrame.AbsolutePosition.X) / SliderValueFrame.AbsoluteSize.X, 0, 1),
								0,
								0.45,
								0
							)
						local pos1 =
							UDim2.new(
								math.clamp((input.Position.X - SliderValueFrame.AbsolutePosition.X) / SliderValueFrame.AbsoluteSize.X, 0, 1),
								0,
								0,
								5
							)
						SliderValueFrame_2:TweenSize(pos1, "Out", "Sine", 0.2, true)
						SliderValueFrame_3:TweenPosition(pos, "Out", "Sine", 0.2, true)
						local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
						TextBox.Text = tostring(value)
						TextHead.Text = tostring(Title)
						pcall(callback, TextBox.Text)
					end

					local dragging = false

					SliderFrame.InputBegan:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = true

							end
						end
					)
					SliderFrame.InputEnded:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = false

							end
						end
					)


					SliderValueFrame.InputBegan:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = true

							end
						end
					)
					SliderValueFrame.InputEnded:Connect(
						function(input)
							if input.UserInputType == Enum.UserInputType.MouseButton1 then
								dragging = false

							end
						end
					)
					game:GetService("UserInputService").InputChanged:Connect(function(input)
						if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
							move(input)
						end
					end)

					TextBox.FocusLost:Connect(function()
						if TextBox.Text == "" then
							TextBox.Text  = default
						end
						if  tonumber(TextBox.Text) > max then
							TextBox.Text  = max
						end
						SliderValueFrame_2:TweenSize(UDim2.new((TextBox.Text or 0) / max, 0, 0, 5), "Out", "Sine", 0.2, true)
						SliderValueFrame_3:TweenPosition(UDim2.new((TextBox.Text or 0)/max, 0,0.3, 0) , "Out", "Sine", 0.2, true)
						TextBox.Text = tostring(TextBox.Text and math.floor( (TextBox.Text / max) * (max - min) + min) )
						pcall(callback, TextBox.Text)
					end)
					
					function anim(property)
						if property == "Text" then
							CustomValueMain:TweenSize(UDim2.new(0, 60,0, 20), "InOut", "Linear", 0.1, true)
							wait(0.1)
							CustomValueMain:TweenSize(UDim2.new(0, 67,0, 20), "InOut", "Linear", 0.1, true)
						end
					end
					TextBox.Changed:Connect(anim)
					
					function sliderfunc.Update(value)
						SliderValueFrame_2:TweenSize(UDim2.new((value or 0) / max, 0, 0, 5), "Out", "Sine", 0.2, true)
						SliderValueFrame_3:TweenPosition(UDim2.new((value or 0)/max, 0,0.3, 0) , "Out", "Sine", 0.2, true)
						TextHead.Text = tostring(Title)

						pcall(function()
							pcall(callback, TextBox.Text)
						end)
					end
					return sliderfunc
				end
				
				function LibraryFunction.TextBox(options)
					
					local Holder = options.Holder or "ww's PlaceHolder"
					local Title = options.Title or "ww's TextBox"
					local callback = options.callback or function() end
					
					local TextBox = Instance.new("Frame")
					local TextBox2 = Instance.new("Frame")
					local TextBoxUICorner = Instance.new("UICorner")
					local TextBoxMain = Instance.new("Frame")
					local TextBoxMainUICorner = Instance.new("UICorner")
					local TextBox_2 = Instance.new("TextBox")
					local UICorner = Instance.new("UICorner")
					local TextHead = Instance.new("TextLabel")
					local TextBoxUICorner_2 = Instance.new("UICorner")

					TextBox.Name = "TextBox"
					TextBox.Parent = PageFrame
					TextBox.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
					TextBox.BackgroundTransparency = 1
					TextBox.BorderSizePixel = 0
					TextBox.ClipsDescendants = true
					TextBox.Position = UDim2.new(0, 0, 3.03157902, 0)
					TextBox.Size = UDim2.new(0, 240, 0, 42)

					TextBox2.Name = "TextBox2"
					TextBox2.Parent = TextBox
					TextBox2.AnchorPoint = Vector2.new(0.5, 0.5)
					TextBox2.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
					TextBox2.BackgroundTransparency = 0.5
					TextBox2.BorderSizePixel = 0
					TextBox2.ClipsDescendants = true
					TextBox2.Position = UDim2.new(0.500241399, 0, 0.5, 0)
					TextBox2.Size = UDim2.new(0, 240, 0, 42)

					TextBoxUICorner.CornerRadius = UDim.new(0, 4)
					TextBoxUICorner.Name = "TextBoxUICorner"
					TextBoxUICorner.Parent = TextBox2

					TextBoxMain.Name = "TextBoxMain"
					TextBoxMain.Parent = TextBox2
					TextBoxMain.AnchorPoint = Vector2.new(0.5, 0.5)
					TextBoxMain.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
					TextBoxMain.BorderSizePixel = 0
					TextBoxMain.ClipsDescendants = true
					TextBoxMain.Position = UDim2.new(0.748253882, 0, 0.48095268, 0)
					TextBoxMain.Size = UDim2.new(0, 110, 0, 31)

					TextBoxMainUICorner.CornerRadius = UDim.new(0, 4)
					TextBoxMainUICorner.Name = "TextBoxMainUICorner"
					TextBoxMainUICorner.Parent = TextBoxMain

					TextBox_2.Parent = TextBoxMain
					TextBox_2.Name = "TextBox_2"
					TextBox_2.AnchorPoint = Vector2.new(0.5, 0.5)
					TextBox_2.BackgroundColor3 = Color3.fromRGB(23, 23, 23)
					TextBox_2.BackgroundTransparency = 1.000
					TextBox_2.BorderSizePixel = 0
					TextBox_2.ClipsDescendants = true
					TextBox_2.Position = UDim2.new(0.499999613, 0, 0.5, 0)
					TextBox_2.Size = UDim2.new(0, 141, 0, 20)
					TextBox_2.Font = Enum.Font.GothamMedium
					TextBox_2.PlaceholderColor3 = Color3.fromRGB(222, 222, 222)
					TextBox_2.PlaceholderText = Holder
					TextBox_2.Text = Holder
					TextBox_2.TextColor3 = Color3.fromRGB(255, 255, 255)
					TextBox_2.TextSize = 12.000

					UICorner.CornerRadius = UDim.new(0, 4)
					UICorner.Name = ""
					UICorner.Parent = TextBox_2

					TextHead.Name = "TextHead"
					TextHead.Parent = TextBox
					TextHead.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					TextHead.BackgroundTransparency = 1.000
					TextHead.Position = UDim2.new(0.0225903615, 0, 0, 0)
					TextHead.Size = UDim2.new(0, 158, 0, 42)
					TextHead.Font = Enum.Font.GothamMedium
					TextHead.TextColor3 = Color3.fromRGB(255, 255, 255)
					TextHead.TextSize = 14.000
					TextHead.TextTransparency = 0.650
					TextHead.Text = Title
					TextHead.TextWrapped = true
					TextHead.TextXAlignment = Enum.TextXAlignment.Left

					TextBoxUICorner_2.CornerRadius = UDim.new(0, 4)
					TextBoxUICorner_2.Name = "TextBoxUICorner"
					TextBoxUICorner_2.Parent = TextBox
					
					TextBox2.MouseEnter:Connect(function()
						TweenService:Create(
							TextHead,
							TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0}
						):Play()
					end)

					TextBox2.MouseLeave:Connect(function()
						TweenService:Create(
							TextHead,
							TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0.65}
						):Play()
					end)
					
					function anim(property)
						if property == "Text" then
							TextBoxMain:TweenSize(UDim2.new(0, 105,0, 31), "InOut", "Linear", 0.1, true)
							wait(0.1)
							TextBoxMain:TweenSize(UDim2.new(0, 110,0, 31), "InOut", "Linear", 0.1, true)
						end
					end
					TextBox_2.Changed:Connect(anim)
					
					TextBox_2.FocusLost:Connect(function(ep)
						if ep then
							if #TextBox_2.Text > 0 then
								pcall(callback, TextBox_2.Text)
							end
						end
					end)
				end
				
				return LibraryFunction
			end

			return LibraryPage
		end
		return LibrarySection
	end
	return LibraryTab
end
return Library
else
	print('1')
	setclipboard("Hwid: "..NewLibrarryHwid.."")
    rconsoleprint("@@WHITE@@")
        rconsoleprint("   [+]  Hwid: "..NewLibrarryHwid.."\n")
		wait(5)
	game:GetService("CoreGui").UILibrary:Destroy()
	game.Players.LocalPlayer:Kick()
end
else
	print('2')
	setclipboard("Hwid: "..NewLibrarryHwid.."")
    rconsoleprint("@@WHITE@@")
        rconsoleprint("   [+]  Hwid: "..NewLibrarryHwid.."\n")
		wait(5)
	game:GetService("CoreGui").UILibrary:Destroy()
	game.Players.LocalPlayer:Kick()
end
else
	print('3')
	setclipboard("Hwid: "..NewLibrarryHwid.."")
    rconsoleprint("@@WHITE@@")
        rconsoleprint("   [+]  Hwid: "..NewLibrarryHwid.."\n")
		wait(5)
	game:GetService("CoreGui").UILibrary:Destroy()
	game.Players.LocalPlayer:Kick()
end
else
	print('4')
	setclipboard("Hwid: "..NewLibrarryHwid.."")
    rconsoleprint("@@WHITE@@")
        rconsoleprint("   [+]  Hwid: "..NewLibrarryHwid.."\n")
		wait(5)
	game:GetService("CoreGui").UILibrary:Destroy()
	game.Players.LocalPlayer:Kick()
end



-- This file was generated using Luraph Obfuscator v13.5.6

do return(function(bH,OH,PH,gH,EH,ZH,LH,TH,AH,zH,XH,mH,yH,JH,IH,cH,DH,KH,iH,SH,RH,fH,QH,CH,pH,aH,qH,lH,uH,YH,nH,HH,xH,jH,MH,WH,oH,UH,wH,hH,NH,e,...)local k=(nH);local eV,v,H,X,G=0X2,nil,nil,nil,nil;local d,r=pcall,tostring;do repeat if not(eV<=0X0001)then if eV==0X2 then v=DH;eV=1;else X=0x80000000;do eV=0X00;end;end;elseif eV~=0 then H={7,0x1,6};do eV=3;end;else G=string.char;eV=0X04;end;until eV>=0X4;end;local Q=(unpack or RH);local R,S,l=uH,nil,(nil);do for Fy=0x0,1 do if Fy==0 then S=SH.insert;else l=IH;end;end;end;local L=(next);local W=lH;local s,x=tonumber,(nil);do for W1=0X00000,0X0001 do if W1==0 then do x=(ZH or bit32);end;else end;end;end;local O=(LH);local T,U=getfenv,X-1;local g,B,f=nil,nil,(nil);do for AV=0,3 do if not(AV<=1)then if AV~=0X2 then f=WH;else B=mH;end;elseif AV~=0 then else g=(T and T()or _ENV);end;end;end;local F=type;local E,V=nil,(assert);local D=QH;f=R(v(f,0X5),"..",function(JN)if B(JN,2)==72 then do E=s(v(JN,0X001,1));end;return"";else local tp=nil;for eT=0X000,0X00001 do if eT==0 then tp=G(s(JN,jH));else if E then local o9=D(tp,E);local P9=(0X0);while 0.4069103847413107 do if P9==0X0 then E=nil;P9=1;else return o9;end;end;else return tp;end;end;end;end;end);local y=function()local tO=nil;for eT=0,0X2 do if eT<=0 then do tO=B(f,O,O);end;else do if eT~=1 then do return tO;end;else O=O+1;end;end;end;end;end;local FH={};local I=setmetatable;local Z,K=rawset,0X0002^0X034;local i=function()local by=(0X00);local Hy,Uy,Oy,Cy=nil,nil,nil,nil;repeat if not(by<=0)then if by~=1 then return Cy*0X1000000+Oy*65536+Uy*256+Hy;else do O=O+0X4;end;by=0X2;end;else do Hy,Uy,Oy,Cy=B(f,O,O+0x003);end;by=0X1;end;until(false);end;local P=(0x100000000);local o,N=P-0X001,({[0X0000]=0X1});local rH=(1);do local pD=(TH);for Sd=0X00001,0X001f do local nd=0X000;while nd<=1 do if nd~=0 then pD=pD*0X0002;do nd=0X2;end;else(N)[Sd]=pD;nd=0X1;end;end;end;end;eV=0;local p,c,w,C=nil,nil,nil,(nil);do while eV<=3 do if not(eV<=0X1)then if eV==2 then w={[0]={[0]=0X0,0x1,2,0X0003,4,0X0005,0X6,0X7,8,0x9,0Xa,0Xb,0Xc,gH,14,15},{[0X0]=1,OH,3,0X2,5,fH,0X07,0x6,9,0X8,EH,0XA,0xD,0X0000C,0x0000F,yH},{[0x000]=0x2,0X3,0,1,6,0X7,4,5,0x00a,0x0b,iH,0X09,14,0Xf,12,13},{[0x00]=3,2,1,0,XH,6,5,4,0X000B,10,0X009,8,15,0xe,13,0Xc},{[0]=4,0X5,6,0X7,OH,LH,2,0x3,0XC,13,14,0xF,0X8,9,PH,11},{[0]=0X05,4,0x0007,6,LH,0X0,0x3,0X2,13,0Xc,KH,0xe,0X9,8,0X0000B,10},{[0]=6,0x7,4,0X5,2,3,0X00000,0X1,yH,15,0Xc,13,0XA,EH,0X8,oH},{[0]=0X7,0X0006,UH,4,0X3,2,0X01,0,15,0Xe,0X000D,0X0C,11,0Xa,9,0X8},{[0X00000]=8,9,0XA,11,12,13,0XE,0X00F,0X00000,0x1,0X2,NH,0X4,0X5,0x6,0X00007},{[0]=9,8,0x00B,10,gH,0XC,15,14,1,0X0,0X0003,TH,5,4,0X7,pH},{[0x00000]=10,0XB,8,9,0XE,15,12,0X00D,2,3,0,0X1,6,7,0X4,5},{[0x0]=0xB,10,9,0x00008,0Xf,14,0xd,0XC,NH,0X2,1,0X00000,0x7,pH,0x0005,4},{[OH]=cH,13,14,0XF,8,0X9,10,0Xb,4,0X5,0X6,0X7,0X000,0x1,0x2,3},{[0]=0X0D,12,0XF,14,oH,8,11,10,5,0x4,0X7,0X6,1,0X0,0X0003,2},{[0]=0Xe,15,0X00c,13,0xa,11,8,0x0009,6,XH,0X4,0X00005,0X2,0x0003,0,0X1},{[0]=15,0xE,0X00d,0X00C,11,0X000A,oH,0X8,0x7,6,5,0X00004,3,2,0X1,0}};do eV=3;end;else C=function()local iB=(i());local uB=1;local GB=i();if iB==0 and GB==0x0 then do return 0X0;end;end;local cB=(-LH)^p(GB,31,0x1);local rB=(p(GB,0X00014,11));local CB=(p(GB,0X00000,CH)*P+iB);local dB=(1);repeat if dB==0 then return cB*(0X2^(rB-1023))*(CB/K+uB);else if rB==0X00000 then if CB==0X0000 then return cB*0;else local iq=(1);while iq<=0x1 do do if iq~=0 then do rB=0X001;end;do iq=0;end;else uB=0;iq=2;end;end;end;end;else if rB==wH then do if CB==0x0 then return cB*(OH/0x000);else do return cB*(0x0001/OH);end;end;end;end;end;do dB=0;end;end;until(false);end;do eV=4;end;end;else do if eV~=0X0 then c=function()local yI,TI=i(),i();local PI=(0X000);while 0.13105051674876123 do if PI==0 then if not(TI>=X)then else do TI=TI-P;end;end;PI=1;else do return TI*P+yI;end;end;end;end;eV=2;else p=function(Ed,Kd,pd)local fd=nil;for PS=0X0000,0x002 do if not(PS<=0X0)then do if PS~=1 then return fd;else do fd=fd-fd%0x1;end;end;end;else fd=(Ed/N[Kd])%N[pd];end;end;end;eV=0X01;end;end;end;end;end;local Y=x and x[xH]or function(vz,Bz)vz=vz%P;local az,Mz=1,(nil);local uz=1;do repeat if not(az<=1)then if az==2 then Mz=0;az=0X0;else return Mz+vz*uz+Bz*uz;end;else if az==0x0 then while vz>OH and Bz>0 do local RL,SL=nil,nil;for t3=0X0,0X5 do do if not(t3<=2)then if t3<=0X003 then do vz=(vz-RL)/16;end;else if t3==4 then do Bz=(Bz-SL)/0X10;end;else uz=uz*jH;end;end;elseif not(t3<=0)then if t3==0x001 then SL=Bz%jH;else do Mz=Mz+w[RL][SL]*uz;end;end;else RL=vz%0x0010;end;end;end;end;az=3;else Bz=Bz%P;az=0X2;end;end;until false;end;end;local J=(x and x.band or function(Xl,pl)Xl=Xl%P;pl=pl%P;return((Xl+pl)-Y(Xl,pl))/0x2;end);local M=x and x[YH]or function(kM,EM)do kM=kM%P;end;EM=EM%P;return o-J(o-kM,o-EM);end;local b=x and x.bnot or function(AL)return o-(AL%P);end;local z=x and x.lshift;local h=x and x.rshift;z=z or function(k5,f5)local u5=(0X2);while 0.5988301706774899 do if u5<=0 then if f5<0X0 then do return h(k5,-f5);end;end;u5=1;else if u5==1 then return(k5*N[f5])%P;else if f5>=0X020 then do return 0X0;end;end;u5=0;end;end;end;end;h=h or function(re,pe)do if pe>=32 then return OH;end;end;local Qe=(0);local Ye=nil;while Qe~=0X0002 do if Qe~=0 then Ye=(re%P/N[pe]);Qe=2;else if pe<0X0 then return z(re,-pe);end;Qe=1;end;end;return Ye-Ye%0x1;end;do eV=0x00000;end;local a,u,A,tH,q,eH=nil,nil,nil,nil,nil,(nil);while eV<=5 do do if eV<=2 then if eV<=0 then do a=function()local jE=(0);local rE=0x000;while true do local Sq=B(f,O,O);do O=O+1;end;rE=M(rE,z(J(Sq,0x007f),jE));if J(Sq,0X80)~=0X0 then else do return rE;end;end;jE=jE+7;end;end;end;eV=1;else if eV==1 then u=JH;eV=5;else q=function()local Oe=(a());do if Oe>U then return Oe-P;end;end;return Oe;end;do eV=4;end;end;end;elseif eV<=3 then do tH={};end;do eV=2;end;else if eV~=4 then A={[6]=TH,[0]=3,[3]=0,[0X0002]=0x2,[9]=0x4,[9]=9,[LH]=UH,[TH]=0X9,[0x05]=0x8,[7]=0X03,[8]=0X8,[3]=0X1};eV=3;else do eH=y();end;eV=0x06;end;end;end;end;local m,VH,kH=nil,nil,nil;for tD=0,2 do if tD<=0 then m=MH.wrap;else if tD==1 then VH=y();else kH=function(gn)local Kn={B(f,O,O+0X003)};local qn,On,Xn=0,nil,(nil);while 0.16740643255706866 do if qn~=0 then Xn=Y(Kn[2],VH);break;else On=Y(Kn[1],VH);qn=1;end;end;local Gn=Y(Kn[0x0003],VH);local mn=(nil);do for LM=0X0000,3 do if not(LM<=0X1)then if LM~=2 then return mn*0X001000000+Gn*0X10000+Xn*256+On;else do O=O+0X00004;end;end;else if LM==0 then mn=Y(Kn[4],VH);else do VH=(237*VH+gn)%bH;end;end;end;end;end;end;end;end;end;local dH=(function(...)return k("#",...),{...};end);local sH=(function(ux)local ox,yx,ex=0X0001,nil,(nil);do repeat if ox==0 then ex="";do ox=0X2;end;else do yx=i();end;ox=0X0;end;until ox==0X2;end;for uP=1,yx,0x1F3D do local DP=uP+zH-0X1;if DP>yx then DP=yx;end;local kP,dP=0X0,nil;do while kP<0X3 do if not(kP<=0X00)then if kP==0X1 then do for Uv=1,#dP do dP[Uv]=Y(dP[Uv],eH);do eH=(ux*eH+83)%0X000100;end;end;end;kP=0x2;else ex=ex..G(Q(dP));kP=3;end;else dP={B(f,O+uP-1,O+DP-0X1)};kP=0x00001;end;end;end;end;do O=O+yx;end;return ex;end);local j=(hH);local t=(error);eV=0X01;local vH,BH,GH=nil,nil,(nil);repeat do if eV<=1 then do if eV~=0 then eV=4;else GH=BH();do eV=3;end;end;end;elseif not(eV<=2)then if eV~=3 then function vH(Jb,mb,ub)local Rb,Ib,zb,Wb=ub[3],ub[5],ub[9],ub[6];local wb=(ub[0X4]);local pb=(ub[0X1]);local gb=ub[0X2];local Bb=ub[8];local Gb=(I({},{__mode='v'}));local bb=nil;bb=function(...)local gm,Km,Bm=0x1,{},(0X0);local Rm={[0X00001]=ub,[0X2]=Km};local Im=(T and T()or _ENV);local qm,Nm=dH(...);qm=qm-1;local Sm=((Im==g and mb or Im));for iO=0X0,qm do if not(zb>iO)then break;else(Km)[iO]=Nm[iO+0X01];end;end;if not Bb then Nm=nil;elseif gb then do Km[zb]={n=qm>=zb and qm-zb+1 or 0,Q(Nm,zb+1,qm+1)};end;end;if Sm~=Im then if not(j)then do _ENV=Sm;end;else j(bb,Sm);end;end;local nm,Em,im,pm=d(function()while true do local iQ=Rb[gm];local aQ=(iQ[4]);do gm=gm+1;end;if not(aQ>=0x2f)then if not(aQ>=23)then do if not(aQ>=0XB)then if not(aQ<5)then if not(aQ>=8)then if not(aQ>=6)then(Km)[iQ[7]]=Km[iQ[0X6]]<Km[iQ[1]];else if aQ==7 then local PG=iQ[0x7];Km[PG](Km[PG+1]);Bm=PG-1;else Km[iQ[0X7]]=Rm[iQ[0X6]];end;end;else if not(aQ<9)then if aQ~=0XA then do Km[iQ[7]]={};end;else if Km[iQ[6]]<=Km[iQ[0X1]]then gm=iQ[0x7];end;end;else do(Km)[iQ[7]]=Km[iQ[0x6]][Km[iQ[0x1]]];end;end;end;else if aQ<0X2 then do if aQ==0X1 then Bm=iQ[7];(Km)[Bm]=Km[Bm]();else(Km)[iQ[7]]=Km[iQ[0x00006]]>=Km[iQ[1]];end;end;else do if not(aQ<3)then if aQ~=4 then Km[iQ[7]]=Sm[iQ[0x2]];else if not(not Km[iQ[0X00007]])then else gm=iQ[6];end;end;else(Km)[iQ[7]]=Y(Km[iQ[6]],Km[iQ[0X001]]);end;end;end;end;else if not(aQ<0X11)then do if aQ>=0X00014 then if not(aQ>=0X15)then do if not(Km[iQ[6]]<Km[iQ[1]])then do gm=iQ[0x7];end;end;end;else do if aQ==22 then local Y5=iQ[0x007];local j5,g5=Km[Y5]();if j5 then do for V8=1,iQ[0x1]do Km[Y5+V8]=g5[V8];end;end;gm=iQ[6];end;else Km[iQ[0X7]]=Km[iQ[6]]~=Km[iQ[1]];end;end;end;else if not(aQ<0X12)then do if aQ==0X000013 then(Km)[iQ[7]]=Km[iQ[6]]-Km[iQ[1]];else local I8=iQ[0X7];local m8=(Km[I8]);local x8=((iQ[0X1]-1)*0X00032);for JZ=1,iQ[6]do m8[x8+JZ]=Km[I8+JZ];end;end;end;else Km[iQ[0X7]][iQ[2]]=iQ[5];end;end;end;else do if not(aQ<0XE)then if aQ<15 then(Km)[iQ[7]]=Km[iQ[0X6]]>Km[iQ[1]];else if aQ==0x010 then Bm=iQ[0X7];Km[Bm]();Bm=Bm-1;else if iQ[0x001]==21 then gm=gm-1;Rb[gm]={[0X07]=(iQ[0X7]-19),[0X6]=(iQ[0x6]-0X13),[0x4]=58};else do repeat local vX,RX=Gb,(Km);if not(#vX>0)then else local AQ=({});do for er,Ir in L,vX do for wy,Ay in L,Ir do if Ay[1]==RX and Ay[0X2]>=0X00 then local XE=(Ay[0X00002]);if not(not AQ[XE])then else AQ[XE]={RX[XE]};end;do Ay[0X1]=AQ[XE];end;Ay[0x00002]=1;end;end;end;end;end;until true;end;return false,iQ[7],Bm;end;end;end;else if not(aQ<12)then if aQ~=13 then repeat local dp,up=Gb,Km;if#dp>0X000 then local jD=({});for iU,OU in L,dp do for ZG,uG in L,OU do if not(uG[0x1]==up and uG[0X2]>=0X0)then else local fO=(uG[2]);if not jD[fO]then(jD)[fO]={up[fO]};end;(uG)[0X1]=jD[fO];uG[2]=1;end;end;end;end;until true;return true,iQ[0X7],0X1;else local Mb=iQ[7];local cb,vb=Km[Mb],(iQ[0X1]-1)*0X0032;for HV=0X01,Bm-Mb do cb[vb+HV]=Km[Mb+HV];end;end;else(Km)[iQ[0x7]]=b(Km[iQ[0X6]]);end;end;end;end;end;end;else if not(aQ<0X023)then if aQ<41 then if not(aQ>=38)then do if not(aQ>=0X000024)then local m3,f3=iQ[0X00007],iQ[0x6];if f3~=0x0 then Bm=m3+f3-0x1;end;local l3,L3=nil,nil;local o3=iQ[0X001];if f3==1 then l3,L3=dH(Km[m3]());else l3,L3=dH(Km[m3](Q(Km,m3+0X1,Bm)));end;if o3==1 then do Bm=m3-1;end;else do if o3==0X0 then do l3=l3+m3-1;end;Bm=l3;else do l3=m3+o3-0X2;end;Bm=l3+0x1;end;end;local SA=0x0;do for bS=m3,l3 do SA=SA+0X1;(Km)[bS]=L3[SA];end;end;end;else if aQ~=0X00025 then do(Km)[iQ[7]]=Km[iQ[0X6]]<=Km[iQ[1]];end;else local iE=Ib[iQ[6]];local BE,AE=iE[0X00007],nil;local NE=#BE;if not(NE>0)then else AE={};for Ov=0X1,NE do local Lv=BE[Ov];if Lv[1]~=0 then(AE)[Ov-0X0001]=Jb[Lv[2]];else AE[Ov-0x1]={Km,Lv[0X002]};end;end;S(Gb,AE);end;(Km)[iQ[7]]=vH(AE,Sm,iE);end;end;end;else if not(aQ>=39)then do Km[iQ[0X7]]=Km[iQ[6]]^Km[iQ[0X0001]];end;else if aQ==0X0028 then(Km)[iQ[0x0007]]=Km[iQ[6]]+Km[iQ[0X01]];else local Ws=iQ[7];Km[Ws]=Km[Ws](Km[Ws+0X001],Km[Ws+0X0002]);Bm=Ws;end;end;end;else if not(aQ>=0X2c)then if aQ>=42 then if aQ==43 then local Xj=iQ[7];(Km[Xj])(Km[Xj+0x01],Km[Xj+0X2]);do Bm=Xj-1;end;else if iQ[1]~=255 then(Km)[iQ[0X7]]=#Km[iQ[0X6]];else do gm=gm-1;end;do Rb[gm]={[6]=(iQ[6]-0X34),[0x07]=(iQ[0X7]-0X34),[4]=78};end;end;end;else if iQ[0X1]~=100 then(Km)[iQ[0X7]]=Nm[zb+1];else gm=gm-1;Rb[gm]={[4]=0x00048,[7]=(iQ[7]-0X00B8),[0X006]=(iQ[6]-184)};end;end;else do if aQ<0X2D then do if iQ[1]~=0x00004A then local AV,yV=qm-zb,(iQ[7]);if AV<0x0000 then AV=-1;end;do for jS=yV,yV+AV do(Km)[jS]=Nm[zb+(jS-yV)+1];end;end;Bm=yV+AV;else gm=gm-1;do Rb[gm]={[7]=(iQ[7]-136),[6]=(iQ[6]-136),[0x0004]=0X3a};end;end;end;else if aQ==46 then local ks,hs=iQ[7],Km[iQ[6]];do Km[ks+0X01]=hs;end;do Km[ks]=hs[iQ[5]];end;else do repeat local F0,E0,L0=Gb,Km,(iQ[7]);if not(#F0>0x0)then else local U_={};for AS,YS in L,F0 do for gs,ns in L,YS do do if not(ns[0X1]==E0 and ns[2]>=L0)then else local sW=(ns[2]);if not(not U_[sW])then else U_[sW]={E0[sW]};end;ns[1]=U_[sW];(ns)[0X002]=1;end;end;end;end;end;until true;end;end;end;end;end;end;else do if aQ>=29 then do if aQ>=0X20 then do if aQ>=33 then if aQ~=34 then local vy=Jb[iQ[0x00006]];do(vy[1])[vy[0x2]]=Km[iQ[7]];end;else repeat local io,po=Gb,Km;if#io>0 then local EM={};for RP,eP in L,io do for F2,Y2 in L,eP do do if not(Y2[1]==po and Y2[2]>=0X000)then else local aM=Y2[0X2];if not EM[aM]then(EM)[aM]={po[aM]};end;Y2[1]=EM[aM];(Y2)[0X002]=1;end;end;end;end;end;until true;return true,iQ[7],0;end;else(Km)[iQ[0x7]]=true;end;end;else if aQ>=0x0001e then if aQ~=31 then local cy=(iQ[0X07]);for Zk=cy,cy+(iQ[6]-1)do Km[Zk]=Nm[zb+(Zk-cy)+0x1];end;else(Km)[iQ[0x7]]=Km[iQ[0X0006]]~=iQ[5];end;else if not(not(Km[iQ[6]]<=Km[iQ[0X1]]))then else gm=iQ[0X7];end;end;end;end;else do if aQ<0X1a then if aQ>=0x18 then if aQ~=0X19 then Km[iQ[7]]=false;else do(Km)[iQ[0X7]]=h(Km[iQ[0x00006]],Km[iQ[0x1]]);end;end;else local Rv=(Km[iQ[6]]/Km[iQ[0X1]]);do Km[iQ[7]]=Rv-Rv%0x1;end;end;else if not(aQ>=0X001b)then Km[iQ[0X007]]=J(Km[iQ[0x6]],Km[iQ[1]]);else if aQ~=28 then local Td=iQ[0X7];Km[Td](Q(Km,Td+1,Bm));do Bm=Td-1;end;else local Va=(iQ[7]);Km[Va]=Km[Va](Q(Km,Va+0x1,Bm));Bm=Va;end;end;end;end;end;end;end;end;else do if not(aQ<71)then if not(aQ<0x53)then if aQ>=0X59 then if not(aQ>=0X005c)then if not(aQ<0X5a)then do if aQ~=91 then local vQ=iQ[0X00006];local bQ=iQ[0X7];Bm=bQ+vQ-0X1;repeat local G9,s9=Gb,Km;if#G9>0X00000 then local mF={};for qe,ue in L,G9 do for cM,ZM in L,ue do if ZM[0X001]==s9 and ZM[2]>=0x0 then local GR=(ZM[2]);do if not(not mF[GR])then else do(mF)[GR]={s9[GR]};end;end;end;do ZM[0X1]=mF[GR];end;ZM[2]=0X0001;end;end;end;end;until true;do return true,bQ,vQ;end;else do(Km)[iQ[0X07]]=z(Km[iQ[0x0006]],Km[iQ[1]]);end;end;end;else Km[iQ[7]]={Q({},0X001,iQ[6])};end;else if not(aQ<93)then if aQ~=94 then(Km[iQ[7]])[Km[iQ[0X6]]]=Km[iQ[1]];else Km[iQ[0X007]]=Km[iQ[6]]/Km[iQ[1]];end;else local WJ=iQ[0x06];do(Km)[iQ[0X7]]=Km[WJ]..Km[WJ+0X1];end;end;end;else if not(aQ<0X56)then do if not(aQ<87)then if aQ~=88 then local xX=(iQ[7]);local sX=(m(function(...)(W)();for KQ,OQ in...do(W)(true,KQ,OQ);end;end));(sX)(Km[xX],Km[xX+1],Km[xX+2]);Bm=xX;do(Km)[xX]=sX;end;gm=iQ[0X6];else local vB=(iQ[0X7]);local sB=(m(function(...)W();for C4 in...do W(true,C4);end;end));sB(Km[vB],Km[vB+0X1],Km[vB+0X2]);Bm=vB;do Km[vB]=sB;end;gm=iQ[6];end;else do Km[iQ[0X007]][iQ[0X2]]=Km[iQ[0x1]];end;end;end;else if aQ<84 then if not(not(Km[iQ[0X6]]<=iQ[5]))then else gm=iQ[0X0007];end;else do if aQ~=85 then do if iQ[0x00001]~=92 then do repeat local Xy,Iy=Gb,(Km);if#Xy>0 then local TE={};for nh,Ph in L,Xy do for VP,WP in L,Ph do if not(WP[1]==Iy and WP[2]>=0x000)then else local GK=WP[0X2];if not(not TE[GK])then else(TE)[GK]={Iy[GK]};end;WP[1]=TE[GK];do WP[2]=0X1;end;end;end;end;end;until true;end;return;else gm=gm-0x00001;do(Rb)[gm]={[0X4]=0X00004C,[7]=(iQ[0X7]-0X0083),[6]=(iQ[0X6]-131)};end;end;end;else Km[iQ[7]]=M(Km[iQ[6]],Km[iQ[0X1]]);end;end;end;end;end;else if not(aQ<0X04D)then do if aQ<80 then do if not(aQ<78)then if aQ==0x00004F then Km[iQ[0x0007]]=Km[iQ[0X6]]%Km[iQ[0X001]];else if iQ[1]==0X46 then gm=gm-1;do(Rb)[gm]={[6]=(iQ[6]-0Xc),[7]=(iQ[0X0007]-0X0C),[0X4]=15};end;else Km[iQ[0x7]]=not Km[iQ[0X0006]];end;end;else if Km[iQ[6]]<Km[iQ[0X0001]]then gm=iQ[7];end;end;end;else if aQ>=81 then do if aQ~=82 then if iQ[1]~=0X00002B then do Km[iQ[7]]=-Km[iQ[6]];end;else gm=gm-0X0001;do(Rb)[gm]={[0X4]=45,[6]=(iQ[0X0006]-0x0Aa),[0X007]=(iQ[7]-0x0000aA)};end;end;else if iQ[0x1]~=130 then if Km[iQ[0X00007]]then do gm=iQ[6];end;end;else gm=gm-1;Rb[gm]={[6]=(iQ[6]-0X99),[0X04]=71,[7]=(iQ[0X7]-0X99)};end;end;end;else local T_=(iQ[0x7]);local N_,b_,V_=Km[T_]();if not(N_)then else(Km)[T_+0X1]=b_;(Km)[T_+2]=V_;gm=iQ[0X0006];end;end;end;end;else if not(aQ<74)then if aQ>=0x00004B then if aQ==0X4c then(Km)[iQ[7]]=Km[iQ[6]];else do for L7=iQ[7],iQ[0X6]do Km[L7]=nil;end;end;end;else(Km)[iQ[0X7]]=Km[iQ[6]][iQ[0X05]];end;else if not(aQ>=72)then if iQ[1]==0X12 then gm=gm-0X1;(Rb)[gm]={[7]=(iQ[0X7]-237),[0X0006]=(iQ[6]-0XeD),[0X4]=44};elseif iQ[0x00001]==72 then gm=gm-0X1;do Rb[gm]={[7]=(iQ[0x7]-149),[0X06]=(iQ[6]-149),[0x4]=81};end;else(Km)[iQ[7]]=nil;end;else do if aQ~=73 then repeat local As,Os=Gb,Km;if#As>0X0 then local kl={};for Q3,m3 in L,As do for sf,Kf in L,m3 do if not(Kf[1]==Os and Kf[2]>=0x00000)then else local T0=Kf[2];do if not(not kl[T0])then else do kl[T0]={Os[T0]};end;end;end;(Kf)[1]=kl[T0];do Kf[2]=1;end;end;end;end;end;until true;local sc=iQ[0X7];do return false,sc,sc+iQ[0X006]-0X2;end;else local xL=(iQ[7]);do Bm=xL+iQ[6]-0X01;end;(Km[xL])(Q(Km,xL+1,Bm));Bm=xL-1;end;end;end;end;end;end;else do if aQ<59 then if aQ>=53 then if not(aQ<0X0038)then if not(aQ<0X000039)then if aQ~=0X3A then if Km[iQ[0x6]]~=Km[iQ[0X1]]then else gm=iQ[7];end;else do if iQ[0x001]==192 then gm=gm-0X1;Rb[gm]={[4]=0X000054,[6]=(iQ[6]-17),[7]=(iQ[7]-0x011)};elseif iQ[1]~=0X00e1 then do repeat local LA,EA=Gb,(Km);if#LA>0 then local II=({});for r6,C6 in L,LA do for gs,Bs in L,C6 do if not(Bs[0X1]==EA and Bs[2]>=0x0)then else local ol=Bs[2];do if not II[ol]then do II[ol]={EA[ol]};end;end;end;(Bs)[1]=II[ol];Bs[2]=0X1;end;end;end;end;until true;end;local Il=iQ[0X007];return false,Il,Il;else do gm=gm-1;end;do(Rb)[gm]={[4]=15,[0X07]=(iQ[7]-0x7F),[0X6]=(iQ[0X6]-127)};end;end;end;end;else do(Km)[iQ[0X7]]=iQ[2];end;end;else if not(aQ<54)then if aQ~=0X37 then if Km[iQ[6]]==iQ[5]then else gm=iQ[0X7];end;else(Km)[iQ[0X7]]=tH[iQ[6]];end;else(Sm)[iQ[2]]=Km[iQ[7]];end;end;else if not(aQ<0x0032)then if not(aQ<0x33)then if aQ==52 then local rE=iQ[0X7];local OE,sE=Km[rE]();if OE then Km[rE+0X1]=sE;gm=iQ[6];end;else if not(iQ[2]<Km[iQ[0X01]])then gm=iQ[7];end;end;else if Km[iQ[0X6]]~=iQ[0X5]then else do gm=iQ[7];end;end;end;else if not(aQ>=0X30)then local D5=(Jb[iQ[0X0006]]);(Km)[iQ[0X7]]=D5[1][D5[0X2]];else if aQ==0X31 then(Km[iQ[7]])[Km[iQ[0x6]]]=iQ[5];else do tH[iQ[0X0006]]=Km[iQ[0X7]];end;end;end;end;end;else do if not(aQ>=0X41)then if aQ>=62 then do if aQ>=63 then if aQ==0X40 then do gm=iQ[0X00006];end;else local Dz=iQ[0X7];local Sz=(m(function(...)(W)();for GP,tP,oP,fP,aP,QP,vP,eP,nP,RP in...do W(true,{GP,tP,oP,fP,aP,QP,vP,eP,nP,RP});end;end));Sz(Km[Dz],Km[Dz+1],Km[Dz+2]);Bm=Dz;(Km)[Dz]=Sz;do gm=iQ[0X6];end;end;else Km[iQ[0x7]]=Km[iQ[6]]+iQ[0x5];end;end;else if not(aQ>=0X003C)then if Km[iQ[6]]==Km[iQ[0x00001]]then else gm=iQ[0x7];end;else do if aQ~=0X3d then do Km[iQ[0x007]]=Km[iQ[6]]*Km[iQ[1]];end;else(Km)[iQ[7]]=iQ[2];end;end;end;end;else if not(aQ>=68)then if not(aQ>=0x42)then Km[iQ[0X07]]=Km[iQ[0x6]]%iQ[5];else if aQ~=0X043 then(Km)[iQ[0X7]]=Km[iQ[6]]==Km[iQ[1]];else local JM=iQ[7];local xM,bM,AM=Km[JM],Km[JM+0X1],Km[JM+0X002];do(Km)[JM]=m(function()for yr=xM,bM,AM do W(true,yr);end;end);end;do gm=iQ[0x6];end;end;end;else if aQ>=69 then if aQ==70 then local rs=(iQ[7]);Km[rs]=Km[rs](Km[rs+0X1]);do Bm=rs;end;else local ta=iQ[0X0007];local Ga,Ya=Km[ta]();if not(Ga)then else gm=iQ[0X00006];Km[ta+0X3]=Ya;end;end;else Rm[iQ[0x6]]=Km[iQ[7]];end;end;end;end;end;end;end;end;end;end;end);if nm then if Em then if pm==0x0001 then do return Km[im]();end;else return Km[im](Q(Km,im+0X1,Bm));end;elseif im then return Q(Km,im,pm);end;else do if F(Em)~="s\116\114\105\110\103"then(t)(Em,0);else if not(u(Em,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if u(Em,"^.-:%d+: ")then(t)("\076u\114\097p\104\032\083\099r\105\112\116\058"..(wb[gm-0X01]or"(internal)").."\058\032"..r(Em),0);else(t)(Em,0);end;end;end;end;end;if not(j)then else j(bb,mb);end;do return bb;end;end;eV=2;else tH[2]=FH;break;end;else function BH()local Eb,wb,Zb,cb,Gb=5,nil,nil,nil,(nil);do while Eb~=11 do if not(Eb<=0X4)then if not(Eb<=0X00007)then if not(Eb<=8)then if Eb==0x9 then Zb[11]=i();Eb=8;else Zb[0X1]=a();do Eb=0X002;end;end;else Zb[18]=i();do Eb=0x3;end;end;else if Eb<=0X5 then Eb=0x000;else do if Eb~=6 then Zb={HH,nil,{},{},{},nil,nil,HH,nil};Eb=1;else Zb[12]=y();Eb=0Xa;end;end;end;end;else do if not(Eb<=1)then if not(Eb<=0X002)then if Eb==3 then do Gb={};end;Eb=0x4;else(Zb)[0XD]=y();do Eb=11;end;end;else(Zb)[15]=y();Eb=9;end;else if Eb==0X0 then do wb={};end;Eb=7;else cb=1;Eb=6;end;end;end;end;end;end;Eb=0X00001;local xb=(nil);while(true)do do if Eb<=0 then xb=i()-78675;do break;end;else do if Eb==1 then do Zb[15]=y();end;Eb=0X2;else(Zb)[0Xa]=i();Eb=0X000;end;end;end;end;end;local Fb=(Zb[3]);Eb=1;local fb,ab,kb=nil,nil,nil;do while Eb~=0X4 do if not(Eb<=1)then if Eb==2 then do fb=i()-66656;end;Eb=0X0000;else kb=y()~=0;Eb=0x4;end;else if Eb==0X0 then do ab=y();end;Eb=0X3;else for e9=LH,xb do Fb[e9]={[6]=q(),[0X004]=a(),[2]=y(),[0x1]=q(),[0X5]=y(),[0X3]=y(),[7]=q()};end;Eb=0X00002;end;end;end;end;for Tc=0X0,0X001 do if Tc~=0 then do for t2=1,xb do local U2,u2=0X1,(nil);do while(true)do if U2==0 then for zA,LA in qH(H)do local CA,oA=nil,(nil);for Bv=0X0,0x2 do if not(Bv<=0)then if Bv==1 then oA=u2[CA];else do if oA==15 then local Ex,ux=nil,(nil);local Bx=1;do while Bx<=0X0002 do if Bx<=0X0 then do ux=Gb[Ex];end;Bx=0X2;else if Bx==0X1 then Ex=wb[u2[LA]];Bx=0;else if not(ux)then else local vd,Jd=0X000,nil;while vd<=1 do do if vd==0x0 then(u2)[CA]=ux[1];do vd=1;end;else Jd=ux[2];vd=2;end;end;end;do(Jd)[#Jd+0X1]={u2,CA};end;end;Bx=0x3;end;end;end;end;elseif oA~=2 then else u2[LA]=t2+u2[LA]+0X01;end;end;end;else CA=A[LA];end;end;end;break;else u2=Zb[3][t2];do U2=0X0;end;end;end;end;end;end;else for z1=1,fb do local D1,N1,O1=nil,nil,nil;local S1=3;do while S1<=0X7 do if S1<=3 then do if not(S1<=1)then if S1~=0X2 then D1=nil;do S1=0X4;end;else do cb=cb+1;end;S1=0X6;end;else if S1~=0 then O1={D1,{}};do S1=0;end;else(Gb)[cb]=O1;S1=0X2;end;end;end;else do if not(S1<=5)then do if S1==0x6 then if not(kb)then else do(FH)[rH]=O1;end;rH=rH+LH;end;do S1=8;end;else if N1==197 then D1=v(sH(ab),i());elseif N1==91 then D1=AH;elseif N1==254 then D1=C();elseif N1==0X0000e0 then do D1=c();end;elseif N1==0x00062 then D1=v(sH(ab),C()+i());elseif N1==NH then D1=c();elseif N1==80 then D1=v(sH(ab),C()+i());elseif N1==0X45 then do D1=v(sH(ab),0X2);end;elseif N1~=236 then else D1=aH;end;do S1=0x00001;end;end;end;else do if S1==4 then N1=y();S1=5;else wb[z1-1]=cb;S1=7;end;end;end;end;end;end;end;end;end;end;(Zb)[0XD]=y();local mb=({});local lb=i();for E5=0X1,lb do local W5=i();local O5=(i());local H5=(1);local a5=(nil);do while H5<2 do if H5~=0 then a5=i();H5=0;else for Nk=W5,O5 do do Zb[0X4][Nk]=a5;end;end;H5=2;end;end;end;end;local Xb=nil;for Ka=0,0X9 do do if not(Ka<=0X4)then if not(Ka<=6)then if not(Ka<=0X7)then do if Ka~=8 then do Zb[0Xb]=y();end;else Zb[0X2]=p(Xb,2,0X1)~=OH;end;end;else Zb[8]=p(Xb,0X01,1)~=0x0;end;else if Ka==5 then(Zb)[6]=a();else Xb=y();end;end;else if Ka<=1 then if Ka~=0 then Zb[16]=i();else(Zb)[0X0D]=y();end;else if not(Ka<=0X2)then if Ka==3 then Zb[13]=i();else do Zb[0X0013]=i();end;end;else(Zb)[9]=a();end;end;end;end;end;local nb=Zb[UH];do Eb=3;end;local eb=(nil);while(true)do if not(Eb<=0x1)then if Eb~=2 then do eb=i()-44882;end;Eb=2;else for sY=0X0,eb-LH do(nb)[sY]=BH();end;do Eb=0;end;end;else if Eb~=0x0 then for Ba=1,a()do do mb[Ba]={y(),a()};end;end;break;else(Zb)[XH]=mb;do Eb=1;end;end;end;end;return Zb;end;eV=0X00000;end;end;until false;do FH=nil;end;return vH(nil,g,GH)(...);end)(0X100,0,10,0Xd,0X00b,bit,0X1,2,false,7997,7,string.byte,0XE,string.match,rawget,12,string.sub,15,0X08,table,table.unpack,0X4,string.rep,0x014,6,true,ipairs,coroutine.yield,string.gsub,'\098o\114',select,nil,'\098xor',16,coroutinesetfenv,3,{64064,0X001afC9dbF,0x000d746C0A1,2056776107,0XF2a25Be3,807336983,3529845105,0X04E50120E,379017128},...);end;
